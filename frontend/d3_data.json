var DATA = {
    "name": "weaviate.io",
    "summary": "hello",
    "url": "parent_url",
    "children": [
        {
            "name": "assets",
            "summary": "pass",
            "url": "parent_url",
            "children": [
                {
                    "name": "files",
                    "summary": "pass",
                    "url": "parent_url",
                    "children": [
                        {
                            "name": "filtered-vector-search-with-caches-performance-fac846a6b769cac8845c4c8ab2f0e07c.png",
                            "summary": "No web page text found, so no summary available.",
                            "url": "https://weaviate.io/assets/files/filtered-vector-search-with-caches-performance-fac846a6b769cac8845c4c8ab2f0e07c.png"
                        },
                        {
                            "name": "weaviate-architecture-overview-54e15328eb9bdfe6695f85443d892f2e.svg",
                            "summary": "No web page text found, so no summary available.",
                            "url": "https://weaviate.io/assets/files/weaviate-architecture-overview-54e15328eb9bdfe6695f85443d892f2e.svg"
                        },
                        {
                            "name": "weaviate-module-diagram-7f76a5296b5fd7f9d6efefa9f4721891.svg",
                            "summary": "No web page text found, so no summary available.",
                            "url": "https://weaviate.io/assets/files/weaviate-module-diagram-7f76a5296b5fd7f9d6efefa9f4721891.svg"
                        }
                    ]
                }
            ]
        },
        {
            "name": "blog",
            "summary": "pass",
            "url": "parent_url",
            "children": [
                {
                    "name": "2023-recap",
                    "summary": "The year 2023 was all about dynamic experimentation at Weaviate. Vector databases became a strong and recognized foundation in building ever more effective AI applications, enabling chatbots, agents, and advanced search systems. Our 2023 global online hackathons proved to be vibrant innovation hubs, fostering diversity and inclusion in co-working.",
                    "url": "https://weaviate.io/blog/2023-recap"
                },
                {
                    "name": "Lock-striping-pattern",
                    "summary": "Weaviate is a database with hundreds of millions of data objects. Weaviate must be able to import data quickly and reliably while maintaining data integrity and reducing time overhead. Database design comes with interesting challenges. Lock striping is an arrangement where locking occurs on multiple buckets or 'stripes'",
                    "url": "https://weaviate.io/blog/Lock-striping-pattern"
                },
                {
                    "name": "ann-algorithms-hnsw-pq",
                    "summary": "Weaviate is already a very performant and robust vector database. With the recent release of v1.18 we are now bringing vector compression algorithms to Weaviate users everywhere. The main goal of this new feature is to offer similar performance at a fraction of the memory requirements and cost.",
                    "url": "https://weaviate.io/blog/ann-algorithms-hnsw-pq"
                },
                {
                    "name": "ann-algorithms-tiles-enocoder",
                    "summary": "In our previous post, we explained how to compress vectors in memory. We introduced HNSW+PQ and explained the most popular encoding technique: KMeans. The Tile encoder is a distribution-based encoder. It doesn\u2019t need to be fit to the data since it leverages the underlying distribution of the data.",
                    "url": "https://weaviate.io/blog/ann-algorithms-tiles-enocoder"
                },
                {
                    "name": "ann-algorithms-vamana-vs-hnsw",
                    "summary": " vector databases must be able to search through a vast number of vectors at speed. This is a huge technical challenge that is only becoming more difficult over time. Approximate Nearest Neighbor (ANN) algorithms to power Weaviate are the current prevailing solution. There are many different ANN algorithms, each with different advantages and limitations.",
                    "url": "https://weaviate.io/blog/ann-algorithms-vamana-vs-hnsw"
                },
                {
                    "name": "announcing-palm-modules",
                    "summary": "Two new Weaviate modules integrate Google's new PaLM large language model (LLM) Google's PaLM was designed to generalize across domains and tasks while being highly efficient. The modules are available to all Weaviates users as of today, with the release of Weaviated version v1.19.1.",
                    "url": "https://weaviate.io/blog/announcing-palm-modules"
                },
                {
                    "name": "authentication-in-weaviate",
                    "summary": "Authentication is one of those topics that we get quite a few questions about. It's a big, complex topic, and even within Weaviate, there are many options available. We've recently introduced an API key-based authentication method, which we think might be a good balance of security and usability.",
                    "url": "https://weaviate.io/blog/authentication-in-weaviate"
                },
                {
                    "name": "autogpt-and-weaviate",
                    "summary": "Auto-GPT is one of the fastest rising open-source python projects harnessing the power of GPT-4. It chains together \u201cthoughts\u201d and completes various tasks or assignments autonomously. It takes G PT-4 one step further by interacting with large language models, like LangChain.",
                    "url": "https://weaviate.io/blog/autogpt-and-weaviate"
                },
                {
                    "name": "automated-testing",
                    "summary": "In this article, we will focus on integration tests. Integrated testing is an important part of the development process, and especially so for complex applications. Weaviate-based apps usually fall in this category. We'll show you how to make testing easier with Embedded Weaviates.",
                    "url": "https://weaviate.io/blog/automated-testing"
                },
                {
                    "name": "binary-quantization",
                    "summary": "Binary quantization(BQ) is a vector compression algorithm that allows you to trade-off between retrieval accuracy and memory requirements. To perform search current vector databases build massive vector indices and search over them in memory. This allows for real-time responses to queries however, compute costs can add up.",
                    "url": "https://weaviate.io/blog/binary-quantization"
                },
                {
                    "name": "cohere-multilingual-with-weaviate",
                    "summary": "Cohere is an AI platform that provides its users with access to its LLMs. Cohere trains their own LLMs for text generation and understanding and serves them via API. You can think of it as a managed LLM service in the cloud, with the ability to customize/finetune them on your dataset.",
                    "url": "https://weaviate.io/blog/cohere-multilingual-with-weaviate"
                },
                {
                    "name": "collections-python-client-preview",
                    "summary": "Weaviate has released a pre-release version of our new Python client API. It's available for you to try out and provide feedback through this form. We've made a number of major improvements, including strong typing, a collections-first approach, and performance improvements.",
                    "url": "https://weaviate.io/blog/collections-python-client-preview"
                },
                {
                    "name": "combining-langchain-and-weaviate",
                    "summary": "Large Language Models (LLMs) have revolutionized the way we interact and communicate with computers. LLMs are a versatile tool that is seen in many applications like chatbots, content creation, and much more. LangChain helps overcome many limitations of LLMs such as hallucination and limited input lengths.",
                    "url": "https://weaviate.io/blog/combining-langchain-and-weaviate"
                },
                {
                    "name": "confluent-and-weaviate",
                    "summary": "Weaviate users now have simple access to data streams from across their entire business to build a real-time, contextual, and trustworthy knowledge base fueling their AI applications. Confluent\u2019s data streaming platform bridges the legacy and modern data stack, providing a continuous supply of AI-ready data.",
                    "url": "https://weaviate.io/blog/confluent-and-weaviate"
                },
                {
                    "name": "cross-encoders-as-reranker",
                    "summary": "Semantic search overcomes the shortcomings of keyword-based search. Bi-Encoder models are fast, but less accurate, while Cross-Encoders are more accurate, but slow. Luckily, we can combine them in a search pipeline to benefit from both models.",
                    "url": "https://weaviate.io/blog/cross-encoders-as-reranker"
                },
                {
                    "name": "crud-support-in-weaviate",
                    "summary": "Machine learning models typically output vectors and common search queries involve finding the closest set of related vectors. The amount of unstructured data that companies and users need to search through is massive. The number of objects is often in the high millions or even billions of data points. A primitive brute-force comparison can no long long be used.",
                    "url": "https://weaviate.io/blog/crud-support-in-weaviate"
                },
                {
                    "name": "details-behind-the-sphere-dataset-in-weaviate",
                    "summary": "Weaviate is an open-source, free-to-use database. It can be used to search large sets of data. This post explains how to use Weaviate to search the data in a large database. We also show you how to import the data into Weaviates.",
                    "url": "https://weaviate.io/blog/details-behind-the-sphere-dataset-in-weaviate"
                },
                {
                    "name": "distance-metrics-in-vector-search",
                    "summary": "A vector embedding is an array of numbers, that is used to describe an object. The meaning of each value in the array, depends on what machine learning model we use to generate them. To judge how similar two objects are, we can compare their vector values, by using various distance metrics.",
                    "url": "https://weaviate.io/blog/distance-metrics-in-vector-search"
                },
                {
                    "name": "docker-and-containers-with-weaviate",
                    "summary": "Docker is a set of products that use OS-level virtualization to deliver software in packages called containers. You can think of docker containers as lightweight virtual machines. After reading this article, your most common questions about these technologies should be answered and there should be nothing in the way of building amazing use cases with Weaviate.",
                    "url": "https://weaviate.io/blog/docker-and-containers-with-weaviate"
                },
                {
                    "name": "dspy-optimizers",
                    "summary": "DSPy lets you define each component that makes a language model request, such as a prompt. DSPy is returning to its roots in Machine Learning, allowing us to better control generative AI systems. To achieve this, D SPy introduces two new concepts: a programming model and a collection of optimizers or compilers.",
                    "url": "https://weaviate.io/blog/dspy-optimizers"
                },
                {
                    "name": "embedded-local-weaviate",
                    "summary": "The Python and TypeScript client libraries support running Weaviate embedded on Linux, and starting with versions 3.21.0 and 1.2.0 respectively. Oh, and all your data stays private locally, and we don't charge you anything. We're also going to build a useful example, illustrating a testing scenario.",
                    "url": "https://weaviate.io/blog/embedded-local-weaviate"
                },
                {
                    "name": "enterprise-use-cases-weaviate",
                    "summary": "The technology that powers ChatGPT and related language models has actually been around for some time before then. In 2019, SeMi Technologies was born, later renamed to Weaviate. We\u2019ve been building and iterating on a highly performant, open source, AI Native vector database that\u2019s closely coupled with language models.",
                    "url": "https://weaviate.io/blog/enterprise-use-cases-weaviate"
                },
                {
                    "name": "find-waldo-with-weaviate",
                    "summary": "Weaviate is a text-based augmented reality tool. It can be used to help users with reading comprehension and vocabulary. Weaviate can also be used in a natural language question (LLM) to help people find the correct information. The tool can be downloaded from the GitHub site.",
                    "url": "https://weaviate.io/blog/find-waldo-with-weaviate"
                },
                {
                    "name": "fine-tuning-coheres-reranker",
                    "summary": "In version 1.20, Weaviate introduced the ability to run reranking at the second stage. In this blog post, I will show you how to fine-tune Cohere\u2019s reranker model. To get started, weaviate developers simply need to add one line of code to their schema.",
                    "url": "https://weaviate.io/blog/fine-tuning-coheres-reranker"
                },
                {
                    "name": "forbes-ai-50-2024",
                    "summary": "This is the sixth year for the list of \u201cAI startups to watch\u2019, which Forbes develops with Sequoia Capital and Meritech Capital. Companies under consideration are vetted by two separate judging panels. It\u2019s still too early to really know all the companies that will evolve, flourish, and grow as the economy is influenced by generative AI.",
                    "url": "https://weaviate.io/blog/forbes-ai-50-2024"
                },
                {
                    "name": "generative-feedback-loop-with-weaviate-and-spcs",
                    "summary": "A Generative Feedback Loop is the idea of using a Large Language Model (LLM) to generate data, then using that data to drive a semantic search. This is an incredibly powerful use case that can enable a whole new kind of search experience. By providing data to an LLM, you have an opportunity to enrich, enhance or even summarize it.",
                    "url": "https://weaviate.io/blog/generative-feedback-loop-with-weaviate-and-spcs"
                },
                {
                    "name": "generative-feedback-loops-with-LLMs",
                    "summary": "Large Language Models are heralding a new era in information technology. To better understand this revolution, it\u2019s important to consider the historical context. The printing press significantly reduced the cost of reproducing information. The internet cut out the middleman, making the distribution of information virtually free.",
                    "url": "https://weaviate.io/blog/generative-feedback-loops-with-LLMs"
                },
                {
                    "name": "generative-feedback-loops-with-llms",
                    "summary": "Large Language Models are heralding a new era in information technology. To better understand this revolution, it\u2019s important to consider the historical context. The printing press significantly reduced the cost of reproducing information. The internet cut out the middleman, making the distribution of information virtually free.",
                    "url": "https://weaviate.io/blog/generative-feedback-loops-with-llms"
                },
                {
                    "name": "gomemlimit-a-game-changer-for-high-memory-applications",
                    "summary": "Using a garbage-collected language is a trade-off between development complexity and execution time. The new GOMEMLIMIT feature can help you both increase GC-related performance as well as avoid GC- related out-of-memory situations. In this article, I will invite you on a journey.",
                    "url": "https://weaviate.io/blog/gomemlimit-a-game-changer-for-high-memory-applications"
                },
                {
                    "name": "google-next-recap",
                    "summary": "The vector database is cementing its place in the new AI stack. Conversations have changed since our last big conference. GenAI projects are moving forward and teams have a better idea of the stack they need to achieve their goals. People gravitated toward our booth because we were open source.",
                    "url": "https://weaviate.io/blog/google-next-recap"
                },
                {
                    "name": "graphql-api-design",
                    "summary": "In this article, we look at how the use of GraphQL can be used to create a better user experience. We also look at the benefits of using this language to help people understand their data. We hope this article will help you understand how to use GraphQL in your own life.",
                    "url": "https://weaviate.io/blog/graphql-api-design"
                },
                {
                    "name": "grpc-performance-improvements",
                    "summary": "Weaviate has been developing a gRPC API and integrating it into our solutions. These are big changes, but we're confident the benefits are worth it. For one, the latest Weaviate solutions are much faster than our pre-gRPC solutions, which were using REST + GraphQL.",
                    "url": "https://weaviate.io/blog/grpc-performance-improvements"
                },
                {
                    "name": "hacktoberfest-2023",
                    "summary": "Weaviate demo sprint is aimed at onboarding engineers and machine learning practitioners to open-source. Participants with four pull requests accepted between October 1 - 31, 2023 will receive a unique digital reward. You can also contribute by adding your own Weaviate examples.",
                    "url": "https://weaviate.io/blog/hacktoberfest-2023"
                },
                {
                    "name": "healthsearch-demo",
                    "summary": "The results shown in Healthsearch should not be taken as health advice. The results are based on the semantic similarity between the query and user-written reviews. Try out the Healthsearch tool to see what other people have found to help them sleep better. For confidential support call the Samaritans in the UK on 08457 90 90 90, visit a local Samaritans branch or click here for details.",
                    "url": "https://weaviate.io/blog/healthsearch-demo"
                },
                {
                    "name": "history-of-weaviate",
                    "summary": "The concept of word embeddings is similar to a supermarket. All the coordinates combined represent a multidimensional hyperspace (often around 300 dimensions) and words that  can be embedded. Weaviate uses a machine-learning algorithm called GloVe to turn individual words into embedDings.",
                    "url": "https://weaviate.io/blog/history-of-weaviate"
                },
                {
                    "name": "how-ai-creates-art",
                    "summary": "The technology behind these images is called diffusion models. These models not only have the ability to dream up photo-realistic images when prompted with text input but can also modify given images to add details, replace objects or even paint in a given artists style. See below for the Mona Lisa drip painted in the style of Jackson Pollock!",
                    "url": "https://weaviate.io/blog/how-ai-creates-art"
                },
                {
                    "name": "how-to-build-an-image-search-application-with-weaviate",
                    "summary": "This blog post will guide you to build a full-stack web application in Python with Weaviate and Flask. The application will take an image of a dog and return an image from the database that best matches the type of dog in an instant. You can use this to build an image-search app or a product search app.",
                    "url": "https://weaviate.io/blog/how-to-build-an-image-search-application-with-weaviate"
                },
                {
                    "name": "how-to-chatgpt-plugin",
                    "summary": "ChatGPT is built on top of GPT 4.0 which is a large language model which doesn\u2019t understand mathematical and algebraic reasoning as well as it does written language. Using the WolframAlpha plugin as a \u201cmath-mode\u201d when needing to solve mathematical problems makes perfect sense. The value for these plugins is greatest when they help make up for a current short-coming.",
                    "url": "https://weaviate.io/blog/how-to-chatgpt-plugin"
                },
                {
                    "name": "how-to-choose-a-sentence-transformer-from-hugging-face",
                    "summary": "Weaviate has recently unveiled a new module which allows users to easily integrate models from Hugging Face to vectorize their data and incoming queries. At the time of this writing, there are over 700 models that can be easily plugged into Weaviate. We will describe factors that differentiate these models and give you tools to choose the perfect model for your use case.",
                    "url": "https://weaviate.io/blog/how-to-choose-a-sentence-transformer-from-hugging-face"
                },
                {
                    "name": "how-to-choose-an-embedding-model",
                    "summary": " vector embeddings power modern search and Retrieval-Augmented Generation (RAG) applications. Embeddings capture the semantic meaning of data objects and represent them in an array of numbers. Weaviate has many integrations with various model providers and their wide variety of embedding models.",
                    "url": "https://weaviate.io/blog/how-to-choose-an-embedding-model"
                },
                {
                    "name": "hugging-face-inference-api-in-weaviate",
                    "summary": " vector databases use Machine Learning models to offer incredible functionality to operate on your data. These use cases require Machine Learning model inference \u2013 a process of running data through an ML model and calculating an output. There are companies \u2013 like Hugging Face, OpenAI, and Cohere \u2013 that offer running model inference as a service.",
                    "url": "https://weaviate.io/blog/hugging-face-inference-api-in-weaviate"
                },
                {
                    "name": "hurricane-generative-feedback-loops",
                    "summary": "In May 2023, we published an initial vision for Generative Feedback Loops. We have since extended our experiments from AirBnB listings to Amazon products. Both of these applications illustrate the ability of generative AI to enhance our data. With the emergence of DSPy, we are now entering a new era of control.",
                    "url": "https://weaviate.io/blog/hurricane-generative-feedback-loops"
                },
                {
                    "name": "hybrid-search-explained",
                    "summary": "The Hybrid search feature was introduced in Weaviate 1.17. It uses sparse and dense vectors to represent the semantic meaning and context of search queries and documents. Sparse vectors have mostly zero values with only a few non-zero values. Dense embeddings are generated from algorithms like BM25 and SPLADE.",
                    "url": "https://weaviate.io/blog/hybrid-search-explained"
                },
                {
                    "name": "hybrid-search-for-web-developers",
                    "summary": "This tutorial is built with Next.js and Weaviate. It uses a beta version of the v3 TypeScript Client. Find out more about the new client here - Experimental clients. To understand hybrid search, we first need to understand the two technologies that power it - vector search and keyword search.",
                    "url": "https://weaviate.io/blog/hybrid-search-for-web-developers"
                },
                {
                    "name": "hybrid-search-fusion-algorithms",
                    "summary": "Weaviate recently added a new algorithm for hybrid search. A hybrid search is really two searches under-the-same-name. Hybrid search enables a \"best-of-both-worlds\" type capability using both of these search types. Weaviate can perform many different types of searches, including vector and keyword search.",
                    "url": "https://weaviate.io/blog/hybrid-search-fusion-algorithms"
                },
                {
                    "name": "ingesting-pdfs-into-weaviate",
                    "summary": "ChatPDF and ChatDOC can be used to chat with your PDFs. PDFs contain valuable insights and information that are key to unlocking text information. With the latest advancements in multimodal deep learning, it is now possible to extract high quality data from PDF documents and add it to your Weaviate workflow.",
                    "url": "https://weaviate.io/blog/ingesting-pdfs-into-weaviate"
                },
                {
                    "name": "instabase-and-weaviate",
                    "summary": "Instabase leverages AI to streamline operations and enhance efficiency across various industries, including banking, insurance, and ride-sharing platforms like Uber. Instabase strategically uses GenAI to transform unstructured data into actionable insights. It\u2019s not just a prototype, but a core part of their platform in production.",
                    "url": "https://weaviate.io/blog/instabase-and-weaviate"
                },
                {
                    "name": "intel",
                    "summary": " vector databases use many techniques and algorithms to improve performance. efficient distance calculations between high-dimensional vectors is a requirement for a good vector database. 40%-60% of the CPU time is spent doing vector distance calculations. If you want to learn how to leverage algorithmic and hardware optimizations to make vector search 40% faster keep reading.",
                    "url": "https://weaviate.io/blog/intel"
                },
                {
                    "name": "llamaindex-and-weaviate",
                    "summary": "Large language models (LLMs) like GPT-4 have impressive capabilities in generation and reasoning. But they have limitations in terms of their ability to access and retrieve specific facts, figures, or contextually relevant information. A popular solution to this problem is setting up a retrieval-augmented generation (RAG) system.",
                    "url": "https://weaviate.io/blog/llamaindex-and-weaviate"
                },
                {
                    "name": "llms-and-search",
                    "summary": "Recent breakthroughs in Large Language Model (LLM) technology are positioned to transition many areas of software. Search and Database technologies have an interesting entanglement with LLMs. There are cases where Search improves the capabilities of LLMs as well as where inversely, LLMs improve the capabilities. We will break down 5 key components of the intersection between LLMs and Search.",
                    "url": "https://weaviate.io/blog/llms-and-search"
                },
                {
                    "name": "local-rag-with-ollama-and-weaviate",
                    "summary": "Prototyping an LLM-powered application is fun and easy but when you want to make it production-ready to use in your company, you will quickly face a variety of challenges. Retrieval-Augmented Generation (RAG) has been shown to be effective against hallucinations. Local deployments are a popular approach for privacy preservation. Everything is local, open source, and doesn\u2019t require any API keys!",
                    "url": "https://weaviate.io/blog/local-rag-with-ollama-and-weaviate"
                },
                {
                    "name": "modal-and-weaviate",
                    "summary": "A full application of AI or embeddings is much more than just a prompt or a model. It\u2019s an integrated system that combines data, models, compute, and user interfaces. In this blog post, we\u2019ll talk about how we built a full application that discovers analogies between Wikipedia articles by combining serverless infrastructure from Modal and Weaviate.",
                    "url": "https://weaviate.io/blog/modal-and-weaviate"
                },
                {
                    "name": "monitoring-weaviate-in-production",
                    "summary": "Weaviate is designed to be easy to monitor and observe by following a cloud native approach. To do this Weaviate supports the following features:Publishing of Prometheus metrics to the standard /metrics endpoint.Use of built-in Kubernetes liveness and readiness checks. Configuration of settings via environment variables.Simplified deployment via helm charts.",
                    "url": "https://weaviate.io/blog/monitoring-weaviate-in-production"
                },
                {
                    "name": "moonsift-story",
                    "summary": "Moonsift offers an ecommerce browser extension for users to curate shoppable boards with products from across the internet. Stylists and curators use Moonsift to create collections, registries, and wish lists that can be shared and shopped with a simple link. Thousands of customers add products from tens of thousands of retailers per month to Moonsift.",
                    "url": "https://weaviate.io/blog/moonsift-story"
                },
                {
                    "name": "multi-tenancy-vector-search",
                    "summary": "Weaviate v1.20 - coming in July 2023 - changes this once and for all. Native multi-tenancy support that scales to millions of tenants with 10s of thousands of active tenants per node. GDPR-compliant deletes with one command are just one of the many features.",
                    "url": "https://weaviate.io/blog/multi-tenancy-vector-search"
                },
                {
                    "name": "multimodal-RAG",
                    "summary": "The average human hears and learns from about 1 billion words in their entire lifetime. This might be an over-approximation, but it is in the correct ballpark because 1 billion seconds is about 30 years. From this, we can infer that the way humans learn is fundamentally different from how our current state-of-the-art models learn.",
                    "url": "https://weaviate.io/blog/multimodal-RAG"
                },
                {
                    "name": "multimodal-models",
                    "summary": "Humans have a remarkable ability to learn and build world models through the integration of multiple sensory inputs. Infants explore the world through their senses, touching, tasting, listening and observing objects and people around them. This sensory exploration helps them link different perspectives of the same experience to create a holistic understanding of their environment.",
                    "url": "https://weaviate.io/blog/multimodal-models"
                },
                {
                    "name": "multimodal-search-in-typescript",
                    "summary": "A modality is a mode in which something exists or is experienced or expressed. In this article, we'll look at how to build Multimodal applications in TypeScript. We leveraged metadata and attached text to these more complex modalities and essentially created a new form of search.",
                    "url": "https://weaviate.io/blog/multimodal-search-in-typescript"
                },
                {
                    "name": "page",
                    "summary": "pass",
                    "url": "parent_url",
                    "children": [
                        {
                            "name": "2",
                            "summary": "Weaviate 1.24 is released! Updates include SIMD-AVX512, Loop Unrolling and Compiler Optimizations. A beta release of our new TypeScript client is now available! Help us make it better by trying it out and providing your feedback. Hurricane is a web application to demonstrate Generative Feedback Loops.",
                            "url": "https://weaviate.io/blog/page/2"
                        },
                        {
                            "name": "3",
                            "summary": "Weaviate 1.23 released with AutoPQ, flat indexing + Binary Quantization, OSS LLM support through Anyscale, and more! Learn how to perform multimodal RAG!Recap the first Weaviate visit to Amazon re:Invent in Las Vegas.",
                            "url": "https://weaviate.io/blog/page/3"
                        },
                        {
                            "name": "4",
                            "summary": "Weaviate 1.21 released with new operators, performance improvements, multi-tenancy improvements, and more. A preview release of our new Python client is now available! Help us make it better by trying it out and providing your feedback. Weaviate GraphQL is a free, open-source version of GraphQL.",
                            "url": "https://weaviate.io/blog/page/4"
                        },
                        {
                            "name": "5",
                            "summary": "Weaviate now supports the PaLM models for embeddings and generative search through two new modules. Weaviate 1.19 introduces generative cohere module, gRPC API support, improved data types, and more. Learn about the new native multi-tenancy feature.",
                            "url": "https://weaviate.io/blog/page/5"
                        },
                        {
                            "name": "6",
                            "summary": "Weaviate 1.18 introduces Faster Filtering through Bitmap Indexing, HNSW-PQ, Cursor API, and more. Learn about Auto-GPT and how to give it long-term memory with Weaviate! Learn about the different ranking models that are used for better search.",
                            "url": "https://weaviate.io/blog/page/6"
                        },
                        {
                            "name": "7",
                            "summary": "Weaviate 1.17 introduces Replication, Hybrid Search, BM25, Faster Startup and Imports. Learn how Diffusion Models work and how you could make use of them. Learn about the hardware, software and performance metric specifications behind our ~1B object import of the Sphere dataset into Weaviate.",
                            "url": "https://weaviate.io/blog/page/7"
                        },
                        {
                            "name": "8",
                            "summary": "Weaviate 1.15 introduces Cloud-native Backups, Memory Optimizations, faster Filtered Aggregations and Ordered Imports, new Distance Metrics and new Weaviate modules. The Lock Striping pattern is a great way to solve race conditions without sacrificing performance.",
                            "url": "https://weaviate.io/blog/page/8"
                        },
                        {
                            "name": "9",
                            "summary": "Weaviate v1.2 introduced support for transformers (DistilBERT, BERT, RoBERTa, Sentence-BERT) to vectorize and semantically search through your data. Learn what is new in Weaviate 1.14, the most reliable and observable Weaviates release yet.",
                            "url": "https://weaviate.io/blog/page/9"
                        }
                    ]
                },
                {
                    "name": "pq-rescoring",
                    "summary": "Product Quantization is a way to compress vectors, allowing users to save on memory requirements. To understand how product quantization (PQ) compression works, imagine every vector you want to store is a unique house address. This address allows you to precisely locate where someone lives including country, state, city, street number, and even down to the house number.",
                    "url": "https://weaviate.io/blog/pq-rescoring"
                },
                {
                    "name": "private-LLM",
                    "summary": "Large Language Models (LLM\u2019s) have revolutionized how we access and consume information. We\u2019re seeing these models revolutionize how we work, learn and interact on a scale never seen before. This wide-scale adoption of LLMs makes the concerns and challenges around privacy and data security paramount, and ones that each organization needs to address.",
                    "url": "https://weaviate.io/blog/private-LLM"
                },
                {
                    "name": "pulling-back-the-curtains-on-text2vec",
                    "summary": "Weaviate converts a text corpus into a set of vectors - each object is given a vector that captures its 'meaning' Here, we will reproduce Weaviate's output vector using only an external API. We will see how the text vectorization process can be tweaked, before wrapping up by discussing a few considerations.",
                    "url": "https://weaviate.io/blog/pulling-back-the-curtains-on-text2vec"
                },
                {
                    "name": "py-client-v4-release",
                    "summary": "The v4 Weaviate Python client library has landed in GA (general availability) form. The v4 client has a brand new API that is more powerful and easier to use. It still includes the existing (v3) API for now, so you can continue to use it without any changes.",
                    "url": "https://weaviate.io/blog/py-client-v4-release"
                },
                {
                    "name": "rag-evaluation",
                    "summary": "RAG is the process of augmenting inputs to a Large Language Model (LLM) with context retrieved from a vector database. RAG applications are commonly used for chatbots and question-answering systems. The RAG pipeline is broken down into three components: 1. Indexing, 2. Retrieval, and 3. Generation.",
                    "url": "https://weaviate.io/blog/rag-evaluation"
                },
                {
                    "name": "ranking-models-for-better-search",
                    "summary": " ranking models describe taking the query and each candidate document, one-by-one, as input to predict relevance. This is different from vector and lexical search where representations are computed offline and indexed for speed. Back in August, we published our thoughts on Cross Encoder Ranking.",
                    "url": "https://weaviate.io/blog/ranking-models-for-better-search"
                },
                {
                    "name": "ref2vec-centroid",
                    "summary": "Weaviate 1.16 introduced the Ref2Vec module. It offers the ability to vectorize a data object with its cross-references to other objects. The module currently holds the name ref2vec-centroid because it uses the average, or centroid vector, to represent the referencing object.",
                    "url": "https://weaviate.io/blog/ref2vec-centroid"
                },
                {
                    "name": "reinvent-2023",
                    "summary": "The Weaviate team went to our first ever AWS re:Invent in November. The focus of the event was Generative AI. We also got great feedback on our open-source RAG app, Verba. Check out our intro video or dive right in to our GitHub repo!",
                    "url": "https://weaviate.io/blog/reinvent-2023"
                },
                {
                    "name": "research-insights-spider",
                    "summary": "Self-Supervised Learning has led to massive advances in generative modeling and representation learning. In this article, we will explain Span-based Unsupervised Dense Retriever (Spider), a recent breakthrough for Self- Supervised representation learning applied to text retrieval in search. The results Spider achieves are extremely exciting!",
                    "url": "https://weaviate.io/blog/research-insights-spider"
                },
                {
                    "name": "retrieval-evaluation-metrics",
                    "summary": "This article gives a comprehensive overview of commonly used evaluation metrics in search and recommendation systems. As recommendation systems can be viewed as a special case of information retrieval or search systems, similar metrics apply to both. We will use the pytrec_eval Python package to showcase how you can evaluate your retrieval or recommendation pipelines in your cod.",
                    "url": "https://weaviate.io/blog/retrieval-evaluation-metrics"
                },
                {
                    "name": "semantic-search-with-wikipedia-and-weaviate",
                    "summary": "Weaviate has open-sourced the complete English language Wikipedia corpus backup in Weaviate. The dataset used is the \"truthy\" version of October 9th, 2021. After processing it contains 11.348.257 articles, 27.377.159 paragraphs, and 125.447.595 graph cross-references.",
                    "url": "https://weaviate.io/blog/semantic-search-with-wikipedia-and-weaviate"
                },
                {
                    "name": "solution-to-tl-drs",
                    "summary": "The bottleneck in knowledge work has been our rate of information discovery and consumption. Weaviate, as a vector database, can help with information cataloging and discovery. But did you know that weaviate can also summarize information during retrieval? Our summarizer module (sum-transformers) can be added to a Weaviates instance to do exactly that.",
                    "url": "https://weaviate.io/blog/solution-to-tl-drs"
                },
                {
                    "name": "sphere-dataset-in-weaviate",
                    "summary": "Sphere is an open-source dataset recently released by Meta. It is a collection of 134 million documents (broken up into 906 million 100-word snippets) It is one of the largest knowledge bases that can help solve knowledge-intensive natural language tasks. The potential for this large of a dataset is awe-inspiring.",
                    "url": "https://weaviate.io/blog/sphere-dataset-in-weaviate"
                },
                {
                    "name": "tags",
                    "summary": "pass",
                    "url": "parent_url",
                    "children": [
                        {
                            "name": "announcement",
                            "summary": "Weaviate is happy to announce our inclusion in the Forbes AI 50 2024 list. We\u2019re excited to share the details of our newly launched Weaviate Hero Program. Let\u2019s find out more about the Hero Program and the Weaviates we\u2019ve partnered with.",
                            "url": "https://weaviate.io/blog/tags/announcement"
                        },
                        {
                            "name": "application",
                            "summary": "Weaviate vector database. Explore enterprise use cases heavily used by our customers adopting generative AI features, search capabilities, and RAG with Weaviate. Use Weaviates vector database to help your customers adopt generativeAI features and search capabilities. Use the Weaviated vector database for your customers to help you with your customers' use cases.",
                            "url": "https://weaviate.io/blog/tags/application"
                        },
                        {
                            "name": "clients",
                            "summary": "Weaviate v3 TypeScript client is now stable. We're pleased to share that the Weaviate. v3 typeScript clients are now stable! We're also happy to announce the release of Weaviates. v4 TypeScript clients. We've released a new version of the client for TypeScript users.",
                            "url": "https://weaviate.io/blog/tags/clients"
                        },
                        {
                            "name": "community",
                            "summary": "We\u2019re excited to share the details of our newly launched Weaviate Hero Program. Let\u2019s find out more about the program and how you can be a part of it. Click through the gallery to find out how to join the program. For more information on the program, visit WeaviatesHero.com.",
                            "url": "https://weaviate.io/blog/tags/community"
                        },
                        {
                            "name": "concepts",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "page",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "2",
                                            "summary": "Learn about why you need distance metrics in vector search and the metrics implemented in Weaviate (Cosine, Dot Product, L2-Squared, Manhattan, and Hamming) Learn about the new native multi-tenancy feature. Learn about how to monitor Weaviates in production and observe key metrics.",
                                            "url": "https://weaviate.io/blog/tags/concepts/page/2"
                                        },
                                        {
                                            "name": "3",
                                            "summary": "Weaviate introduces Ref2Vec, a new module that utilises Cross-References for Recommendation. Learn about the vision of the AI-First Database Ecosystem, which drives the R&D of the databases of the future. Learn how Diffusion Models work and how you could make use of them.",
                                            "url": "https://weaviate.io/blog/tags/concepts/page/3"
                                        },
                                        {
                                            "name": "4",
                                            "summary": "Learn how the AI-first vector database Weaviate unlocks the potential of unstructured data and why this is important. Learn how to use the database in your own business. Learn more about the project at: www.weaviate.com. For more information, visit the company's website.",
                                            "url": "https://weaviate.io/blog/tags/concepts/page/4"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "engineering",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "2",
                                    "summary": "Weaviate 1.21 released with new operators, performance improvements, multi-tenancy improvements, and more. Learn about the six pillars outlining how Weaviate will evolve in 2023.Learn about the hardware, software and performance metric specifications behind our ~1B object import of the Sphere dataset.",
                                    "url": "https://weaviate.io/blog/tags/engineering/page/2"
                                }
                            ]
                        },
                        {
                            "name": "how-to",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "page",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "2",
                                            "summary": "Learn about high-availability setups with Weaviate, which can allow upgrades and other maintenance with zero downtime. Learn about our latest open source demo and how we used Semantic and Generative Search to improve access to health data. Learn how to make testing less of a chore with Embedded Weaviates.",
                                            "url": "https://weaviate.io/blog/tags/how-to/page/2"
                                        },
                                        {
                                            "name": "3",
                                            "summary": "Learn how to use build an image search application using the Img2vec-neural module. Learn how to import and query the Sphere dataset in Weaviate. Back up and restore your Weaviates data with the native backup feature. Back to the page you came from.",
                                            "url": "https://weaviate.io/blog/tags/how-to/page/3"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "integrations",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "2",
                                    "summary": "Cohere announced the release of the text-understanding multilingual model. Learn how to use it in Weaviate. Ref2Vec is a new module that utilises Cross-References for Recommendation.Learn about the various Sentence Transformers from Hugging Face.",
                                    "url": "https://weaviate.io/blog/tags/integrations/page/2"
                                }
                            ]
                        },
                        {
                            "name": "javascript",
                            "summary": "Weaviate v3 TypeScript client is now stable. Weaviate TypeScript and Next.js are now available in the same place. We're pleased to share that the Weaviates v3. TypeScript clients are now stable! We're also happy to announce that the next version of the Next.JS client is also now available.",
                            "url": "https://weaviate.io/blog/tags/javascript"
                        },
                        {
                            "name": "recap",
                            "summary": "Google Cloud Next is set to go live in the U.S. next week. Google Cloud Next will be the company's cloud computing platform. The company is also set to launch its cloud-storage service in the United States. The service is expected to be available in the coming months.",
                            "url": "https://weaviate.io/blog/tags/recap"
                        },
                        {
                            "name": "release",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "2",
                                    "summary": "Weaviate 1.18 introduces Faster Filtering through Bitmap Indexing, HNSW-PQ, Cursor API, and more. Weaviate v1.2 introduced support for transformers (DistilBERT, BERT, RoBERTa, Sentence-BERT) to vectorize and semantically search through your data.",
                                    "url": "https://weaviate.io/blog/tags/release/page/2"
                                }
                            ]
                        },
                        {
                            "name": "research",
                            "summary": "Self-Supervised Retrieval can surpass BM25 and Supervised techniques. In-depth technical breakdown of how binary quantization works and how to use it in Weaviate. How does Vamana compare to HNSW? How does it work on disks?",
                            "url": "https://weaviate.io/blog/tags/research"
                        },
                        {
                            "name": "search",
                            "summary": "Learn about the different ranking models that are used for better search results. Learn about the differences between vector libraries and vector databases. Discover how Weaviate can help you with your search queries. Learn how to build your own search queries using the new search engine. Use the new tool to help you find the right search results for your search query.",
                            "url": "https://weaviate.io/blog/tags/search"
                        }
                    ]
                },
                {
                    "name": "the-ai-first-database-ecosystem",
                    "summary": "New search engines and databases brilliantly answer queries posed in natural language. The same approach can also be used to search anything from images to DNA. Much of the software involved is open source, so it functions transparently. Clients can retain control of their data, keeping it safely behind their own firewalls.",
                    "url": "https://weaviate.io/blog/the-ai-first-database-ecosystem"
                },
                {
                    "name": "tutorial-backup-and-restore-in-weaviate",
                    "summary": "Weaviate v1.15 introduced a backup feature that streamlines the backup process. This tutorial will show you how to use this feature to back up your data and restore it to another Weaviate instance. By the end of this tutorial, you will have:",
                    "url": "https://weaviate.io/blog/tutorial-backup-and-restore-in-weaviate"
                },
                {
                    "name": "typescript-client-beta",
                    "summary": "We've released a beta version of our new TypeScript client. It's available for you to try out on npm under the new name: weaviate-client. We\u2019ve made a lot of changes that mirror our client refresh in Python. We have better TypeScript support, a collections-first approach, and performance improvements.",
                    "url": "https://weaviate.io/blog/typescript-client-beta"
                },
                {
                    "name": "typescript-client-stable-release",
                    "summary": "The new Weaviate v3 Typescript client is now available. The new client has a faster gRPC-powered API and numerous quality-of-life improvements. To install the new client, run the following command in your terminal:$ wget -i \"v3\" && wget http://www.weaviate.com/v3.",
                    "url": "https://weaviate.io/blog/typescript-client-stable-release"
                },
                {
                    "name": "unbody-weaviate",
                    "summary": "Unbody's first line of code was written in 2016 as a headless CMS for Google Drive. The project kept growing, and fast forward to 2022, during our search for a better search engine, we stumbled upon Weaviate. What started as a simple test quickly led to a rather crazy decision: we migrated our entire content database to Weaviates.",
                    "url": "https://weaviate.io/blog/unbody-weaviate"
                },
                {
                    "name": "understand-your-unstructured-data",
                    "summary": "Unstructured data is especially hard to index, manage and understand. Since around 80% of all data is unstructured, it is hard to actually search and retrieve insights from most of the data. Searching by fuzzy terms and classification of rich data like free text becomes possible with Weaviate. It uses AI-driven indexing and search technologies.",
                    "url": "https://weaviate.io/blog/understand-your-unstructured-data"
                },
                {
                    "name": "vector-embeddings-explained",
                    "summary": "Weaviate is a search engine that uses a data structure called vector embedding. The core function is to provide high-quality search results, going beyond simple keyword or synonym searches. To tackle this problem, semantic search uses at its core aData structure called Vector embedding (or simply, vector or embedding), which is an ar.",
                    "url": "https://weaviate.io/blog/vector-embeddings-explained"
                },
                {
                    "name": "vector-library-vs-vector-database",
                    "summary": " vector databases and vector libraries allow you to efficiently search through your vectors. They both use the Approximate Nearest Neighbor (ANN) algorithm to search through vectors in a tiny fraction of the time. You can learn more about this topic from \"Why Vectors Search is so Fast\"",
                    "url": "https://weaviate.io/blog/vector-library-vs-vector-database"
                },
                {
                    "name": "verba-open-source-rag-app",
                    "summary": "Retrieval Augmented Generation (RAG) applications search for relevant sources and create a personalized answer. RAG applications use provided data sources instead of the general knowledge Large Language Models (LLMs) are trained on. We wanted to make it easy for anyone to get into RAG, without all the hassle of setting things up.",
                    "url": "https://weaviate.io/blog/verba-open-source-rag-app"
                },
                {
                    "name": "wcs-public-beta",
                    "summary": "The Weaviate Cloud is a fully managed vector database service. It's the easiest way to get a vector database up and running within minutes. The service is free to use, but there are plans to make it available for paid use in the future. For more information on how to use the service, visit:\u00a0www.weaviate.com.",
                    "url": "https://weaviate.io/blog/wcs-public-beta"
                },
                {
                    "name": "weaviate-1-14-release",
                    "summary": "Weaviate 1.14 is the most reliable and observable Weaviate release yet. This release includes over 25 bug fixes and a few neat features. Check out the changelog to see the complete list of features and over 25Bug fixes. In this release we fixed a critical bug, which in rare situations could result in data loss.",
                    "url": "https://weaviate.io/blog/weaviate-1-14-release"
                },
                {
                    "name": "weaviate-1-15-1-release",
                    "summary": "Two weeks after the v1.15.0 release, which introduced backups and more, we fixed over 15 bugs. This release addresses fixes and improvements around: This started as a single bug investigation, but quickly this led to a discovery of five others. There was an issue when trying to update objects without vectors, but then you would add a vector later. That could lead to cryptic error messages like \"incompatible vector dimensions: 0 vs. 128\".",
                    "url": "https://weaviate.io/blog/weaviate-1-15-1-release"
                },
                {
                    "name": "weaviate-1-15-release",
                    "summary": "Weaviate 1.15.1 has been released. This release includes two big community contributions from Aakash Thatte and Dasith Edirisinghe. We hope to see many more big and small contributions in the coming months and years. Read below to learn more about each of these points in more detail.",
                    "url": "https://weaviate.io/blog/weaviate-1-15-release"
                },
                {
                    "name": "weaviate-1-16-release",
                    "summary": "Weaviate 1.16 brings a set of great features, performance and UX improvements, and fixes. The ability to seamlessly combine an inverted index with a vector index is part of what makes Weaviate so powerful. The possibility to query the null state has been added.",
                    "url": "https://weaviate.io/blog/weaviate-1-16-release"
                },
                {
                    "name": "weaviate-1-17-release",
                    "summary": "Weaviate's v1.17 release introduces replication. Replication enables you to set up your Weaviate environment in a cluster with multiple server nodes. Adding extra database nodes can serve more users simultaneously. Database replication enables zero downtime upgrades, because of no downtime upgrades.",
                    "url": "https://weaviate.io/blog/weaviate-1-17-release"
                },
                {
                    "name": "weaviate-1-18-release",
                    "summary": "Weaviate 1.18 brings a set of great features, performance improvements, and fixes. This release introduces a compact, modern data structure to Weaviate called \u201cRoaring bitmaps\u201d The new Roaring bitmap indexing dramatically speeds up filtered searches. It provides up to 1000(!) times faster performance in some cases.",
                    "url": "https://weaviate.io/blog/weaviate-1-18-release"
                },
                {
                    "name": "weaviate-1-19-release",
                    "summary": "Weaviate 1.19 brings a set of great features, performance improvements, and fixes. A downgrade to v1.18 will no longer be supported. You can now group Get search results based on a specific property. The groups and objectsPerGroup limits are custom.",
                    "url": "https://weaviate.io/blog/weaviate-1-19-release"
                },
                {
                    "name": "weaviate-1-2-transformer-models",
                    "summary": "Weaviate modules are used to extend the vector database with vectorizers or functionality that can be used to query your dataset. With the release of Weaviate v1.2, we have introduced the use of transformers (DistilBERT, BERT, RoBERTa, Sentence-BERT) to vectorize and search through your data.",
                    "url": "https://weaviate.io/blog/weaviate-1-2-transformer-models"
                },
                {
                    "name": "weaviate-1-20-release",
                    "summary": "Weaviate 1.20 is a new release of Weaviate. This release includes a number of new features. The most important new feature is the ability to store data from up to millions of tenants in a single setup. This means that scaling your business or infrastructure to include data from a large group of users is easier and faster than ever.",
                    "url": "https://weaviate.io/blog/weaviate-1-20-release"
                },
                {
                    "name": "weaviate-1-21-release",
                    "summary": "1.21 adds ContainsAny and ContainsAll operators to make your filters sweeter than ever. You can use these to reduce complex chains of And or Or where filters to simple, digestible, queries that are easier on your eye and your brain. This is one of our most-requested features, and we are very excited for you to try it out.",
                    "url": "https://weaviate.io/blog/weaviate-1-21-release"
                },
                {
                    "name": "weaviate-1-22-release",
                    "summary": "Weaviate 1.22 is already available on Weaviate Cloud - so try it out! Nested properties let you work with an address value that has number, street, and city` properties of its own. Object and object[] join the available list of data types.",
                    "url": "https://weaviate.io/blog/weaviate-1-22-release"
                },
                {
                    "name": "weaviate-1-23-release",
                    "summary": "Weaviate 1.23 is already available on Weaviate Cloud - so try it out! This release includes improvements to Product Quantization (PQ) PQ requires a training step, so we created AutoPQ to take care of the training for you. In this release we have a new algorithm to determine the optimal segment size.",
                    "url": "https://weaviate.io/blog/weaviate-1-23-release"
                },
                {
                    "name": "weaviate-1-24-release",
                    "summary": "Weaviate 1.24 is here! Here are the release highlights. Named vectors make your collections richer and more versatile. You can group things that are logically related, like a music video and a lyric sheet, in the same object. You don't have to create cross-references or manage shared metadata.",
                    "url": "https://weaviate.io/blog/weaviate-1-24-release"
                },
                {
                    "name": "weaviate-1-25-release",
                    "summary": "In 1.25 we\u2019re introducing the dynamic vector index. This will initially create a flat index to be used and once the number of objects exceeds a certain threshold (by default 10,000 objects) it will dynamically switch you over to an HNSW index. Here is how you can configure Weaviate to use a dynamic index.",
                    "url": "https://weaviate.io/blog/weaviate-1-25-release"
                },
                {
                    "name": "weaviate-cloud-services",
                    "summary": "Weaviate, the leader in open-source vector database technology, announces an entirely new pricing model for its Weaviate Cloud. Beginning today, users have the option of paying a usage-based rate for search on a per-dimension basis. Pricing begins at $0.05 per million dimensions.",
                    "url": "https://weaviate.io/blog/weaviate-cloud-services"
                },
                {
                    "name": "weaviate-community-hero",
                    "summary": "Weaviate has more than 25K members in our Community, and we are still growing rapidly. Our Community is active across the web and in real life. We see engagement in channels like LinkedIn, Twitter, Github, Slack, Discourse, and StackOverflow, as well as at conferences, meetups, and hackathons.",
                    "url": "https://weaviate.io/blog/weaviate-community-hero"
                },
                {
                    "name": "weaviate-gorilla-part-1",
                    "summary": "Gorilla is a new direction for LLMs, API Co-pilots achieved by fine-tuning LLMs to use a particular set of APIs. Weaviate has many APIs that help developers get running with production grade Retrieval-Augmented Generation. Before LLMs or human developers can access the power of Weaviates, they must learn the syntax.",
                    "url": "https://weaviate.io/blog/weaviate-gorilla-part-1"
                },
                {
                    "name": "weaviate-non-english-languages",
                    "summary": "Many embedding models and large language models have shown great benefits, especially in English-centric contexts. semantic search and Generative AI applications need to be able to handle languages other than English. Many language models with multilingual capabilities have already been released. This blog explores the challenges of non-English languages, such as the necessity of capable language models.",
                    "url": "https://weaviate.io/blog/weaviate-non-english-languages"
                },
                {
                    "name": "weaviate-podcast-search",
                    "summary": "The Whisper speech-to-text model is a game-changer! It can transcribe podcasts with astonishing accuracy, allowing us to index them into Weaviate! I have been hosting the Weaviates podcast for a little over a year with 34 published episodes and am super excited to tell you how this will completely revamp our podcast.",
                    "url": "https://weaviate.io/blog/weaviate-podcast-search"
                },
                {
                    "name": "weaviate-retrieval-plugin",
                    "summary": "ChatGPT can now interact with the world of other apps we use in our everyday lives. The plugins announcement is a game-changer, arguably even more important than the 4.0 upgrade to the underlying GPT model itself. Some are explaining plugins as the \u201ceyes and ears\u201d of LLMs to help products like ChatGPT interact more naturally with users.",
                    "url": "https://weaviate.io/blog/weaviate-retrieval-plugin"
                },
                {
                    "name": "what-are-llms",
                    "summary": "When OpenAI launched ChatGPT at the end of 2022, more than one million people had tried the model in just a week. Since then, OpenAI has been iteratively improving the underlying model, announcing the release of GPT (Generative Pretrained Transformer) 4.0.",
                    "url": "https://weaviate.io/blog/what-are-llms"
                },
                {
                    "name": "what-is-a-vector-database",
                    "summary": " vector databases have been around for a few years, but they\u2019ve just recently drawn the wider developer community\u2019s attention. This article will walk through what vector databases are and explain some of their core concepts, such as vector embeddings and vector search. We will dive into the technical details of how distance metrics are used in vector search and how vector indexes enable efficient retrieval.",
                    "url": "https://weaviate.io/blog/what-is-a-vector-database"
                },
                {
                    "name": "what-to-expect-from-weaviate-in-2023",
                    "summary": "Weaviate\u2019s usage numbers are through the roof, and so are your feedback and requests for what you\u2019re still missing from Weaviate. In early 2023 we even saw the addition of the generative-openai module (with other generative modules to come). We want to give you even more flexibi.",
                    "url": "https://weaviate.io/blog/what-to-expect-from-weaviate-in-2023"
                },
                {
                    "name": "why-is-vector-search-so-fast",
                    "summary": "Weaviate is a tool that allows users to search Wikipedia articles. The tool can search for articles about cities in Europe, for example. It takes a fraction of a second for the results to appear on the user's screen. Weaviate can be downloaded for free from the Google Play store and the App Store.",
                    "url": "https://weaviate.io/blog/why-is-vector-search-so-fast"
                },
                {
                    "name": "zero-downtime-upgrades",
                    "summary": "Weaviate has a robust, production-ready database that can scale as our users do. For example, many of our users already run Weaviate with multi-tenancy (introduced in version 1.20) to host thousands of active tenants or even more. One side effect of scaling is that as load increases on each node, it will take longer to start up.",
                    "url": "https://weaviate.io/blog/zero-downtime-upgrades"
                }
            ]
        },
        {
            "name": "neople",
            "summary": "Neople is a startup that uses generative artificial intelligence to create digital co-workers. Neople Assistants are uniformly integrated with the tools businesses already use to process customer support cases. The company\u2019s brain, or operating hub, is built on AWS with Weaviate as their vector database of choice.",
            "url": "https://weaviate.io/case-studies/neople"
        },
        {
            "name": "events",
            "summary": "Sign up below to learn how to build AI-native apps.Join an online workshop or meet us in-person at an event. We hold workshops for different experience levels.Stay up to date with the latest Weaviate trends and insights. Follow us on Twitter @Weaviate.",
            "url": "https://weaviate.io/community/events"
        },
        {
            "name": "company",
            "summary": "pass",
            "url": "parent_url",
            "children": [
                {
                    "name": "about-us",
                    "summary": "Weaviate is about teamwork, sharing responsibility and learning from one another. We believe that the next wave of software infrastructure is AI-first and that a strong open-source community is a basis for creatinghigh-quality software. To create an experience that resonates with others, we must surpass expectations.",
                    "url": "https://weaviate.io/company/about-us"
                },
                {
                    "name": "careers",
                    "summary": "Weaviate is a vector database, which uses AI and machine learning to organize and search data in a completely new way. With over 1.6 million downloads, Weaviate continues to grow. We are looking for ambitious people globally. Join us to expand and grow our community of users!",
                    "url": "https://weaviate.io/company/careers"
                },
                {
                    "name": "investors",
                    "summary": "We are a company backed by Index Ventures, Battery Ventures, New Enterprise Associates, Cortical Ventures, Zetta Venture Partners, ING Ventures, GTM-fund, Scale Asia Ventures, and Alex van Leeuwen. You can find more information about us on our Crunchbase page, our board and advisors are listed on our organizational chart.",
                    "url": "https://weaviate.io/company/investors"
                },
                {
                    "name": "playbook",
                    "summary": "pass",
                    "url": "parent_url",
                    "children": [
                        {
                            "name": "being-a-remote-first-company",
                            "summary": "Weaviate has spent almost its entire life as a company in the pandemic and post-pandemic period. We were never forced to make a rushed transition from on-site to remote work; we were born remote-first. We believe that the benefits of remote work clearly outweigh any disadvantages.",
                            "url": "https://weaviate.io/company/playbook/being-a-remote-first-company"
                        },
                        {
                            "name": "building-an-open-source-brand",
                            "summary": "Weaviate is building an open-source brand. To create a meaningful brand, we need to know why we're solving that problem, and who we are. Businesses that don't know why they exist and what they are trying to achieve struggle to find product-market fit.",
                            "url": "https://weaviate.io/company/playbook/building-an-open-source-brand"
                        },
                        {
                            "name": "cell-theory-planning-for-organic-growth",
                            "summary": "The buzz around generative AI has greatly increased interest in AI-native tech. More and more people realize that a vector database like ours may be nearly essential for most applications of LLMs. Meanwhile our core open-source technology has passed the MVP stage and new instances of product-market fit are occurring so fast that it's a challenge to keep up.",
                            "url": "https://weaviate.io/company/playbook/cell-theory-planning-for-organic-growth"
                        },
                        {
                            "name": "creating-a-playful-new-identity-for-weaviate",
                            "summary": "Rebranding was an opportunity to reflect on who we are now and where we're going. It's a chance to evaluate messaging, visual identity, and our overall brand strategy. It was an even bigger deal for me because as a graphic designer, creating a new corporate identity from a clean sheet of paper is a rare treat.",
                            "url": "https://weaviate.io/company/playbook/creating-a-playful-new-identity-for-weaviate"
                        },
                        {
                            "name": "creating-a-remote-first-solution-engineering-team",
                            "summary": "I lead Weaviate\u2019s Solution Engineering team. Right now, we\u2019re only four people. We combine a broad knowledge of different types of software, different domains, and applications. We\u2019're also responsible for running Weaviates in the cloud for customers who want to have a managed service.",
                            "url": "https://weaviate.io/company/playbook/creating-a-remote-first-solution-engineering-team"
                        },
                        {
                            "name": "creating-an-inclusive-culture-in-remote-work-settings",
                            "summary": "Inclusive culture is good for business and good for people. Inclusive culture allows people with different backgrounds to be heard. It also encourages people to share their views. Inclusion is key to the success of a business or business in the long run. It is also good for the community.",
                            "url": "https://weaviate.io/company/playbook/creating-an-inclusive-culture-in-remote-work-settings"
                        },
                        {
                            "name": "creating-great-talks",
                            "summary": "As Weaviate\u2019s head of developer relations, my job is all about connecting with developers in our open-source community. I prefer giving talks in person as opposed to remotely. I need that person-to-person connection. I want to help other team members become effective advocates in their own far-flung developer communities.",
                            "url": "https://weaviate.io/company/playbook/creating-great-talks"
                        },
                        {
                            "name": "first-company-workation",
                            "summary": "Over the past six months, Weaviate has doubled in size; we\u2019re now nearly 30 people. At this point, we have team members based in Europe, the U.S., South America, and Australia. Some colleagues who have been working closely on the same team for months have never met face-to-face.",
                            "url": "https://weaviate.io/company/playbook/first-company-workation"
                        },
                        {
                            "name": "from-sunday-nights-blues-to-monday-morning-cheers-the magic-of-company-culture",
                            "summary": "Culture is how employees' hearts and stomachs feel about Monday morning on Sunday night. Bill Marklein is head of people and culture at Weaviate. Marklein: Culture is so central to our business that it deserved some time to think about and reflect on this.",
                            "url": "https://weaviate.io/company/playbook/from-sunday-nights-blues-to-monday-morning-cheers-the magic-of-company-culture"
                        },
                        {
                            "name": "good-design-is-good-business",
                            "summary": "Our brains evolved to process images, not text. As a result, we still process images much faster than words. Website interfaces, social media messages, videos and images, printed material\u2026 It has all been designed and usually the designer\u2019s goal has been to communicate a message, not just make it pretty.",
                            "url": "https://weaviate.io/company/playbook/good-design-is-good-business"
                        },
                        {
                            "name": "hiring-at-weaviate-finding-our-perfect-matches",
                            "summary": "Weaviate has been recruiting heavily after a successful Series B round. The company has been mentioned at Google I/O and a Gartner conference. This has got me thinking about the nature of recruiting. What personality traits or \u201csoft skills\u201d are we looking for in prospective employees?",
                            "url": "https://weaviate.io/company/playbook/hiring-at-weaviate-finding-our-perfect-matches"
                        },
                        {
                            "name": "how-a-values-driven-all-hands-helps-sustain-our-company-culture",
                            "summary": "Weaviate's All Hands set-up has been overhauled to reflect the needs of the company. Weaviate has doubled in size in the last year and expects to grow again in the coming year. The new All Hands format is designed to be more informal and informal.",
                            "url": "https://weaviate.io/company/playbook/how-a-values-driven-all-hands-helps-sustain-our-company-culture"
                        },
                        {
                            "name": "i-recently-onboarded-myself-introducing-people-operations",
                            "summary": "In July, Weaviate hired its first People Operations Manager. People Operations is not just a 21st century name for \u201chuman resources\u201d It is not only operational but also strategic and employee-centric. The difference is marked by emphasizing \u201cpeople\u2019\u2014as in real, whole persons.",
                            "url": "https://weaviate.io/company/playbook/i-recently-onboarded-myself-introducing-people-operations"
                        },
                        {
                            "name": "our-mission-at-weaviate",
                            "summary": "Weaviate is transforming from a small band of visionaries, into a company. In order to stay true to our open-source spirit as we grow, we want to share that vision with a much larger group of people than just our team. That's the purpose of this blog. We think of it as a playbook on how run our company.",
                            "url": "https://weaviate.io/company/playbook/our-mission-at-weaviate"
                        },
                        {
                            "name": "page",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "2",
                                    "summary": "In January 2023, SeMI Technologies became Weaviate as we aligned with our customers. The entire Company will soon gather for the first time\u2026 in Italy! The company's All Hands sessions were once held in a small room in the back of the office. The company is now based in San Francisco, California.",
                                    "url": "https://weaviate.io/company/playbook/page/2"
                                },
                                {
                                    "name": "3",
                                    "summary": "Creating an inclusive culture in remote work settings. Creating a remote-first Solution Engineering team. Why the business model of open-source software works. Creating great talks.Building an open- source brand. On being a remote first company. On creating a great remote team. On building a great team. on being a Remote First Company.",
                                    "url": "https://weaviate.io/company/playbook/page/3"
                                },
                                {
                                    "name": "4",
                                    "summary": "Our mission at Weaviate is to change the way the world looks at the world. To do this, we need to change how we see the world around us. We need to look beyond our own borders and into those of others. We must also look beyond ourselves and into the future.",
                                    "url": "https://weaviate.io/company/playbook/page/4"
                                }
                            ]
                        },
                        {
                            "name": "reflections-and-insights-on-my-internship-at-weaviate",
                            "summary": "I heard of Weaviate through a video by the Youtuber Fireship. I have since used it whenever I needed a vector database for one of my side projects. Philip invited me to intern in his team after seeing our Hackathon project. I didn\u2019t hesitate long to take one semester off from my computer science bachelor.",
                            "url": "https://weaviate.io/company/playbook/reflections-and-insights-on-my-internship-at-weaviate"
                        },
                        {
                            "name": "taking-time-off-at-weaviate",
                            "summary": "As a remote-first company, Weaviate gives its people the flexibility to work when and where they choose. But there\u2019s more to work/life balance than flexibility on the \u2018work\u2019 side of that equation. I believe that taking time off to recharge and refresh one's mind are essential.",
                            "url": "https://weaviate.io/company/playbook/taking-time-off-at-weaviate"
                        },
                        {
                            "name": "the-case-of-product-engineering",
                            "summary": "At early-stage companies like Weaviate, teams are still small, so it\u2019s often difficult to justify both a dedicated Product Manager and a formal engineering team lead. A single person often takes the lead in both product and engineering decisions.Combining both roles into one is the best way we\u2019ve found to develop and iterate new ideas.",
                            "url": "https://weaviate.io/company/playbook/the-case-of-product-engineering"
                        },
                        {
                            "name": "weaviate-celebrates-a-fourth-birthday",
                            "summary": "The media\u2019s recent obsession with generative AI and ChatGPT in particular was a bit of an early birthday present for Weaviate. In the last few months, we have found that when we talk about vector databases, we\u2019re more widely understood too.",
                            "url": "https://weaviate.io/company/playbook/weaviate-celebrates-a-fourth-birthday"
                        },
                        {
                            "name": "why-the-business-model-of-open-source-software-works",
                            "summary": "A question that I get a lot is, \u201cWhy would you create an open-source business?\u201d That\u2019s understandable; I must seem like an inventor who refuses to patent his inventions or an entrepreneur giving products away for free. If you have trouble explaining how such business models work, try using an example of a business from outside the world of software.",
                            "url": "https://weaviate.io/company/playbook/why-the-business-model-of-open-source-software-works"
                        }
                    ]
                }
            ]
        },
        {
            "name": "developers",
            "summary": "pass",
            "url": "parent_url",
            "children": [
                {
                    "name": "academy",
                    "summary": "pass",
                    "url": "parent_url",
                    "children": [
                        {
                            "name": "deployment",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "k8s",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "access_weaviate",
                                            "summary": "We have spun up a Weaviate instance in our Kubernetes cluster. The service is not yet accessible from the outside world. We will look at how to access the service, and how to configure it to suit your needs. Run minikube tunnel to expose the service to theoutside world.",
                                            "url": "https://weaviate.io/developers/academy/deployment/k8s/access_weaviate"
                                        },
                                        {
                                            "name": "kubernetes_basics",
                                            "summary": "Kubernetes is an open-source container orchestration platform. It means that you can use Kubernetes to deploy, scale, and manage containerized applications. Here, you learn how to do this using Minikube, a handy tool that allows you to run a Kuberne cluster on your local machine.",
                                            "url": "https://weaviate.io/developers/academy/deployment/k8s/kubernetes_basics"
                                        },
                                        {
                                            "name": "multi_node",
                                            "summary": "Weaviate runs on a single node in a Kubernetes cluster with Minikube. To scale it up to a multi-node setup, we need a cluster with multiple nodes. Then, we can configure Weaviate to make use of these nodes. We'll delete the current one and start a new one for simplicity.",
                                            "url": "https://weaviate.io/developers/academy/deployment/k8s/multi_node"
                                        },
                                        {
                                            "name": "next_steps",
                                            "summary": "You have successfully deployed Weaviate on your Kubernetes cluster. What you could explore, then, is how to adapt these examples to a multi-node case with replication and/or sharding. If you are interested in the architecture behind replication and sharding, please check out the following resources.",
                                            "url": "https://weaviate.io/developers/academy/deployment/k8s/next_steps"
                                        },
                                        {
                                            "name": "setup_weaviate",
                                            "summary": "Weaviate provides a Helm chart that you can use to deploy Weaviate on Kubernetes. This section will show you how to use the Helm chart to deploy the app on a Kuberne cluster. We will use this chart to create a configuration file for the Weaviates app.",
                                            "url": "https://weaviate.io/developers/academy/deployment/k8s/setup_weaviate"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "intro_weaviate_typescript",
                            "summary": "This self-contained, practical video course will teach you the basics of Weaviate. It will also teach you how to integrate it to a TypeScript (or JavaScript) app. The course will be available in English, Spanish, French and Italian. It is intended to be a short course of about 30 minutes in length.",
                            "url": "https://weaviate.io/developers/academy/js/intro_weaviate_typescript"
                        },
                        {
                            "name": "py",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "compression",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "bq",
                                            "summary": "Binary quantization (BQ), is a technique used to compress vectors. In Weaviate, it can be used to reduce the size of the in-memory HNSW index or the disk-based flat index. BQ is a relatively simple algorithm, but can perform well in the right circumstances.",
                                            "url": "https://weaviate.io/developers/academy/py/compression/bq"
                                        },
                                        {
                                            "name": "next_steps",
                                            "summary": "You have completed this course on compression. We hope you found it helpful and informative. There are many more resources available to help you continue your learning journey. Keep an eye out for new resources and updates, by signing up for our newsletter or following us on social media (Twitter, LinkedIn)",
                                            "url": "https://weaviate.io/developers/academy/py/compression/next_steps"
                                        },
                                        {
                                            "name": "pq",
                                            "summary": "Product quantization (PQ), is a technique used to compress vectors. In Weaviate, it can be used to reduce the size of the in-memory HNSW index. PQ can improve performance and reduce resource requirements as well as costs. It can reduce the length of the vector by a factor of 6, and also thesize of each segment from a floating point number (4 bytes) to a byte.",
                                            "url": "https://weaviate.io/developers/academy/py/compression/pq"
                                        },
                                        {
                                            "name": "strategy",
                                            "summary": "PQ is currently only supported for the HNSW index. If you are using the flat index, you will need to use BQ. PQ parameters are tunable whereas BQ is not. This means you can adjust PQ to be more or less aggressive on performance parameters.",
                                            "url": "https://weaviate.io/developers/academy/py/compression/strategy"
                                        }
                                    ]
                                },
                                {
                                    "name": "named_vectors",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "next_steps",
                                            "summary": "You have completed this course on named vectors. We hope you found it helpful and informative. There are many more resources available to help you continue your learning journey. We are constantly improving our documentation, so please keep an eye out for new resources and updates, by signing up for our newsletter.",
                                            "url": "https://weaviate.io/developers/academy/py/named_vectors/next_steps"
                                        },
                                        {
                                            "name": "nv_collections",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "create_collection",
                                                    "summary": "This example creates a collection for the movie data, including multiple named vector definitions. To use named vectors, your collection be configured with named vector definition. The key difference here is the use of NamedVectors class to define vectorizer configurations. This code builds on the multimodal example. Review that example for further explanations.",
                                                    "url": "https://weaviate.io/developers/academy/py/named_vectors/nv_collections/create_collection"
                                                },
                                                {
                                                    "name": "import_data",
                                                    "summary": "This example imports the movie data into our collection. The exact same code that we used for single vector configuration in the multimodal course can be used here. This is because the named vector configuration is set up in the collection definition, and Weaviate handles the rest.",
                                                    "url": "https://weaviate.io/developers/academy/py/named_vectors/nv_collections/import_data"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "nv_preparation",
                                            "summary": "This page briefly covers the required resources and setup, including the Weaviate Python client library, and a Weaviates instance. This course is self-contained. However, we recommend that you go through one of the 101-level courses, such as that for working with text, your own vectors, or multimodal data.",
                                            "url": "https://weaviate.io/developers/academy/py/named_vectors/nv_preparation"
                                        },
                                        {
                                            "name": "nv_queries",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "searches",
                                                    "summary": "Weaviate lets you search collections with named vectors. Each search must specify a \"target\" vector. This applies for near_text and near_ vector searches, as well as multimodal searches such as near_image. Let's explore a few examples here.",
                                                    "url": "https://weaviate.io/developers/academy/py/named_vectors/nv_queries/searches"
                                                },
                                                {
                                                    "name": "use_cases",
                                                    "summary": "Named vectors can be used in RAG queries to improve workflow and results. RAG, or retrieval augmented generation, is a powerful feature that combines the strengths of both vector search and language generation. Named vectors allow different users to search and generate results based on their specific needs, using the same collection.",
                                                    "url": "https://weaviate.io/developers/academy/py/named_vectors/nv_queries/use_cases"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "set_up_python",
                                    "summary": "If you have Python 3.8 or higher installed, you can skip the remainder of this section. Another good way to install Python is to install pyenv. This will allow you to manage multiple versions of Python on your system. A virtual environment allows you to isolate various Python projects from each other.",
                                    "url": "https://weaviate.io/developers/academy/py/set_up_python"
                                },
                                {
                                    "name": "standalone",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "chunking",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "considerations",
                                                    "summary": "This is a preview version of this unit. Some sections are not yet complete - such as videos and quiz questions. Please check back later for the full version, and in the meantime, feel free to provide any feedback through the comments below.We have covered a lot of ground on chunking in this unit already. We will take a step back out from the detailed, micro view to the high level, macro view.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/chunking/considerations"
                                                },
                                                {
                                                    "name": "example_chunking",
                                                    "summary": "This is a preview version of this unit. Some sections are not yet complete - such as videos and quiz questions. We'll ingest multiple sections of a book using different chunking methods before comparing how search performs. In this section, we'll use multiple entire chapters of the Pro Git book, in total containing 14 sections.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/chunking/example_chunking"
                                                },
                                                {
                                                    "name": "example_search",
                                                    "summary": "This is a preview version of an article about chunking techniques in Git. We'll use Weaviate to search through the book and evaluate the impact of the techniques. Some sections are not yet complete - such as videos and quiz questions. Please check back later for the full version.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/chunking/example_search"
                                                },
                                                {
                                                    "name": "how_1",
                                                    "summary": "This is a preview version of this unit. Some sections are not yet complete - such as videos and quiz questions. Please check back later for the full version, and in the meantime, feel free to provide any feedback through the comments below. Now that you've learned about what chunking is, and why it is important, you are ready to start looking at practical chunking techniques.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/chunking/how_1"
                                                },
                                                {
                                                    "name": "how_2",
                                                    "summary": "This is a preview version of this unit. Some sections are not yet complete - such as videos and quiz questions. Please check back later for the full version, and in the meantime, feel free to provide any feedback through the comments below. We continue our discussion of chunking techniques by taking you through variable-size chunking.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/chunking/how_2"
                                                },
                                                {
                                                    "name": "introduction",
                                                    "summary": "Chunking is the pre-processing step of splitting texts into smaller pieces of texts, i.e. \"chunks\" It can have a significant impact on the performance of vector databases, and outputs of language models. This is a preview version of this unit. Some sections are not yet complete - such as videos and quiz questions. Check back later for the full version.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/chunking/introduction"
                                                },
                                                {
                                                    "name": "wrap_up",
                                                    "summary": "This is a preview version of this unit. Some sections are not yet complete - such as videos and quiz questions. Please check back later for the full version. Feel free to provide any feedback through the comments below. Back to Mail Online home.back to the page you came from.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/chunking/wrap_up"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "which_search",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "review",
                                                    "summary": "Weaviate offers three primary search types - namely vector, keyword, and hybrid searches. These code examples are runnable, with the v4 Weaviate Python client. Connect to the pre-configured demo instance of Weaviates with the following code.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/which_search/review"
                                                },
                                                {
                                                    "name": "selection",
                                                    "summary": " vector search is the most robust and versatile search type. It is well-suited for situations where the meaning, or the vector representation, is of the highest importance. Keyword search is useful when there is an expectation or requirement to match the exact search terms. This can be the case for specific domains such as legal, medical or technical areas where the exact terminology is important.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/which_search/selection"
                                                },
                                                {
                                                    "name": "strategies",
                                                    "summary": "The key to improving vector search is to make sure that the vector representation of the object is fit for purpose. Unless you are inserting data with your own vectors, you will be using a Weaviate vectorizer module, and a model within that module, to generate vectors for your data.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/which_search/strategies"
                                                },
                                                {
                                                    "name": "strengths",
                                                    "summary": "A vector is a numerical representation of the underlying object's meaning. A vector search is robust to any changes that don't affect the meaning of the object. These different search types are offered because they each have different characteristics, and therefore different strengths. Let's explore the relative strengths of each search type.",
                                                    "url": "https://weaviate.io/developers/academy/py/standalone/which_search/strengths"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "starter_custom_vectors",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "next_steps",
                                            "summary": "You have completed this introductory course on Weaviate. You may be interested in exploring our documentation or the Academy for more advanced courses. We are constantly improving our documentation, so keep an eye out for new resources and updates, by signing up for our newsletter or following us on social media.",
                                            "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/next_steps"
                                        },
                                        {
                                            "name": "object_collections",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "create_collection",
                                                    "summary": "Weaviate stores data in \"collections\" A collection is a set of objects that share the same data structure. Each property has a name and a data type. Weaviate can automatically infer the data. However, it's a good practice to define the properties explicitly.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/object_collections/create_collection"
                                                },
                                                {
                                                    "name": "generate_vectors",
                                                    "summary": "We use the sentence-transformers/all-MiniLM-L6-v2 model to generate the vectors. We access it here through the Hugging Face API for convenience. You could also use the transformers library, if you would like to perform the generation locally.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/object_collections/generate_vectors"
                                                },
                                                {
                                                    "name": "import_data",
                                                    "summary": "This example uses the .dynamic() method to create a dynamic batcher, which automatically determines and updates the batch size during the import process. There are also other batcher types, like .fixed_size() for specifying the number of objects per batch. The data is converted from a string to the correct data types for Weaviate.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/object_collections/import_data"
                                                },
                                                {
                                                    "name": "preparation",
                                                    "summary": "Make sure to have your Weaviate instance set up. You should have created an instance and be able to connect to it. We are going to use a movie dataset sourced from TMDB. The dataset can be found in this GitHub repository. It contains bibliographic information on ~700 movies released between 1990 and 2024.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/object_collections/preparation"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "object_rag",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "grouped_task",
                                                    "summary": "A 'grouped task' generation wil perform RAG queries on a set of retrieved objects. This is useful when you want to transform the set of objects as a whole, with one prompt. You can also pass on a list of properties to be used, as the grouped_properties parameter. This can be useful to reduce the amount of data passed on.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/object_rag/grouped_task"
                                                },
                                                {
                                                    "name": "setup",
                                                    "summary": "RAG queries are also called 'generative' queries in Weaviate. You can access these functions through the generate submodule of the collection object. Each generative query works in addition to the regular search query. This allows you to retrieve objects and then generate outputs based on the retrieved objects.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/object_rag/setup"
                                                },
                                                {
                                                    "name": "single_prompt",
                                                    "summary": "A 'single prompt' generation wil perform RAG queries on each retrieved object. This is useful when you want to transform each object separately, with the same prompt. This example finds entries in \"Movie\" based on their similarity to the input vector. Then, instructs the large language model to translate the title of each movie into French.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/object_rag/single_prompt"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "object_searches",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "filters",
                                                    "summary": "Filters can be used to precisely refine search results. You can filter by properties as well as metadata, and you can combine multiple filters with and or or conditions to further narrow down the results. This example finds entries in \"Movie\" based on their similarity to the query vector, only from those released after 2010.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/object_searches/filters"
                                                },
                                                {
                                                    "name": "keyword_hybrid",
                                                    "summary": "The results are based on a keyword search score using what's called the BM25f algorithm. You can also perform keyword (BM25) searches to find items based on their keyword similarity, or hybrid searches that combine BM25 and semantic/ vector searches. The limit parameter here sets the maximum number of results to return.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/object_searches/keyword_hybrid"
                                                },
                                                {
                                                    "name": "vector",
                                                    "summary": "The results are based on similarity of the vector embeddings between the query and the database object text. This can be done with a near vector query. The limit parameter here sets the maximum number of results to return. The returned object is an instance of a custom class. Its objects attribute is a list of search results.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/object_searches/vector"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "setup_weaviate",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "client",
                                                    "summary": "The latest Weaviate Python client library can be installed using pip. The client library is tested on Python 3.8 and later. The latest major version is v4 (e.g. 4.x.x). If you have any questions or feedback, let us know in the user forum.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/setup_weaviate/client"
                                                },
                                                {
                                                    "name": "communicate",
                                                    "summary": "Weaviate can be accessed using the Python client library. You can check whether the Weaviate instance is up using the is_live function. We will not include the try-finally blocks in the remaining code snippets. If you have any questions or feedback, let us know in the user forum.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/setup_weaviate/communicate"
                                                },
                                                {
                                                    "name": "create_instance",
                                                    "summary": "pass",
                                                    "url": "parent_url",
                                                    "children": [
                                                        {
                                                            "name": "create_docker",
                                                            "summary": "This page shows how to create a Weaviate instance using Docker. If you have created a cloud instance of Weaviates, you can skip this page and continue with Communicate with Weaviated. You can provide the API keys for these services to WeAViate at instantiation.",
                                                            "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/setup_weaviate/create_instance/create_docker"
                                                        },
                                                        {
                                                            "name": "create_wcs",
                                                            "summary": "Weaviate Cloud (WCD) is a fully managed Weaviate instance that runs in the cloud. It's a great way to get started as it requires no installation or maintenance. To connect to the WCD instance, you need to use the cluster URL and the API key.",
                                                            "url": "https://weaviate.io/developers/academy/py/starter_custom_vectors/setup_weaviate/create_instance/create_wcs"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "starter_multimodal_data",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "mm_collections",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "create_collection",
                                                    "summary": "Weaviate stores data in \"collections\" A collection is a set of objects that share the same data structure. In our movie database, we have properties like title, release_date and genre_ids, with data types like TEXT (string), DATE (date), or INT (integer)",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/mm_collections/create_collection"
                                                },
                                                {
                                                    "name": "import_data",
                                                    "summary": "This example imports the movie data into our collection. We use the requests library to load the data from the source. The text data is then converted to a Pandas DataFrame. The images are extracted from the Zip file. Then, we create a collection object (with client.collections.get) so we can interact with the collection.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/mm_collections/import_data"
                                                },
                                                {
                                                    "name": "preparation",
                                                    "summary": "We are going to use a movie dataset sourced from TMDB. The dataset can be found in this GitHub repository. It contains bibliographic information on ~700 movies released between 1990 and 2024. We'll also use corresponding posters for each movie, which are available in the same repository.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/mm_collections/preparation"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "mm_rag",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "grouped_task",
                                                    "summary": "A 'grouped task' generation wil perform RAG queries on a set of retrieved objects. This is useful when you want to transform the set of objects as a whole, with one prompt. For grouped_task queries, you simply pass on the prompt to the grouped_ task parameter. You can also pass on a list of properties to be used. This can be useful to reduce the amount of data passed on to the large language model.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/mm_rag/grouped_task"
                                                },
                                                {
                                                    "name": "setup",
                                                    "summary": "RAG queries are also called 'generative' queries in Weaviate. You can access these functions through the generate submodule of the collection object. Each generative query works in addition to the regular search query. This allows you to retrieve objects from a Weaviates instance and then generate outputs based on the retrieved objects.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/mm_rag/setup"
                                                },
                                                {
                                                    "name": "single_prompt",
                                                    "summary": "A 'single prompt' generation wil perform RAG queries on each retrieved object. This is useful when you want to transform each object separately, with the same prompt. This example finds entries in \"MovieMM\" based on their similarity to this image of the International Space Station. Then, instructs the large language model to translate the title of each movie into French.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/mm_rag/single_prompt"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "mm_searches",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "filters",
                                                    "summary": "Filters can be used to precisely refine search results. You can filter by properties as well as metadata, and you can combine multiple filters with and or or conditions to further narrow down the results. This example finds entries in \"MovieMM\" based on their similarity to the query \"dystopian future\", only from those released after 2010.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/mm_searches/filters"
                                                },
                                                {
                                                    "name": "keyword_hybrid",
                                                    "summary": "You can also perform keyword (BM25) searches to find items based on their keyword similarity, or hybrid searches that combine BM25 and semantic/ vector searches. The limit parameter here sets the maximum number of results to return. The return_metadata parameter takes an instance of the MetadataQuery class to set metadata to return in the search results.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/mm_searches/keyword_hybrid"
                                                },
                                                {
                                                    "name": "multimodal",
                                                    "summary": "With Weaviate, you can perform semantic searches to find similar items based on their meaning. This is done by comparing the vector embeddings of the items in the database. As we are using a multimodal model, we can search for objects based on the similarity to any of the supported modalities.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/mm_searches/multimodal"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "next_steps",
                                            "summary": "You have completed this introductory course on Weaviate. You may be interested in exploring our documentation or the Academy for more advanced courses. We are constantly improving our documentation, so keep an eye out for new resources and updates, by signing up for our newsletter or following us on social media.",
                                            "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/next_steps"
                                        },
                                        {
                                            "name": "setup_weaviate",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "client",
                                                    "summary": "The latest Weaviate Python client library can be installed using pip. The client library is tested on Python 3.8 and later. The latest major version is v4 (e.g. 4.x.x). If you have any questions or feedback, let us know in the user forum.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/setup_weaviate/client"
                                                },
                                                {
                                                    "name": "communicate",
                                                    "summary": "You can check whether the Weaviate instance is up using the is_live function. You can retrieve meta information about the Weviate instance using the meta function. This will print the server meta information to the console. After you have finished using the WeAviate client, you should close the connection.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/setup_weaviate/communicate"
                                                },
                                                {
                                                    "name": "create_docker",
                                                    "summary": "This course uses a local, Docker instance of Weaviate. Generating multimodal vectors is currently only possible with local models. See the Work with: your own vectors course for more information. If you are generating vectors outside of WeAViate, you can use a cloud instance.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_multimodal_data/setup_weaviate/create_docker"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "starter_text_data",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "next_steps",
                                            "summary": "You have completed this introductory course on Weaviate. You may be interested in exploring our documentation or the Academy for more advanced courses. We are constantly improving our documentation, so keep an eye out for new resources and updates, by signing up for our newsletter or following us on social media.",
                                            "url": "https://weaviate.io/developers/academy/py/starter_text_data/next_steps"
                                        },
                                        {
                                            "name": "setup_weaviate",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "client",
                                                    "summary": "The latest Weaviate Python client library can be installed using pip. The client library is tested on Python 3.8 and later. The latest major version is v4 (e.g. 4.x.x). If you have any questions or feedback, let us know in the user forum.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/setup_weaviate/client"
                                                },
                                                {
                                                    "name": "communicate",
                                                    "summary": "Weaviate can be accessed using the Python client library. You can check whether the Weaviate instance is up using the is_live function. We will not include the try-finally blocks in the remaining code snippets. If you have any questions or feedback, let us know in the user forum.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/setup_weaviate/communicate"
                                                },
                                                {
                                                    "name": "create_instance",
                                                    "summary": "pass",
                                                    "url": "parent_url",
                                                    "children": [
                                                        {
                                                            "name": "create_docker",
                                                            "summary": "This page shows how to create a Weaviate instance using Docker. If you have created a cloud instance of Weaviates, you can skip this page and continue with Communicate with Weaviated. You can provide the OpenAI API key to WeAViate through headers={\"X-OpenAI-Api-Key\": <YOUR_KEY>}.",
                                                            "url": "https://weaviate.io/developers/academy/py/starter_text_data/setup_weaviate/create_instance/create_docker"
                                                        },
                                                        {
                                                            "name": "create_wcs",
                                                            "summary": "Weaviate Cloud (WCD) is a fully managed Weaviate instance that runs in the cloud. It's a great way to get started as it requires no installation or maintenance. To connect to the WCD instance, you need to use the cluster URL and the API key.",
                                                            "url": "https://weaviate.io/developers/academy/py/starter_text_data/setup_weaviate/create_instance/create_wcs"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "name": "text_collections",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "create_collection",
                                                    "summary": "Weaviate stores data in \"collections\" A collection is a set of objects that share the same data structure. Each property has a name and a data type like title, date and genre. Weaviate can automatically infer the data from the collection. We can also use the built-in search function to search for specific objects.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/text_collections/create_collection"
                                                },
                                                {
                                                    "name": "import_data",
                                                    "summary": "This example uses the .dynamic() method to create a dynamic batcher, which automatically determines and updates the batch size during the import process. There are also other batcher types, like .fixed_size() for specifying the number of objects per batch. The data is converted from a string to the correct data types for Weaviate.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/text_collections/import_data"
                                                },
                                                {
                                                    "name": "preparation",
                                                    "summary": "We are going to use a movie dataset sourced from TMDB. The dataset can be found in this GitHub repository. It contains bibliographic information on ~700 movies released between 1990 and 2024. You will need an OpenAI API key to follow along. If you have any questions or feedback, let us know in the user forum.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/text_collections/preparation"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "text_rag",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "grouped_task",
                                                    "summary": "A 'grouped task' generation wil perform RAG queries on a set of retrieved objects. This is useful when you want to transform the set of objects as a whole, with one prompt. For grouped_task queries, you simply pass on the prompt to the grouped_ task parameter. You can also pass on a list of properties to be used. This can be useful to reduce the amount of data passed on.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/text_rag/grouped_task"
                                                },
                                                {
                                                    "name": "setup",
                                                    "summary": "RAG queries are also called 'generative' queries in Weaviate. You can access these functions through the generate submodule of the collection object. Each generative query works in addition to the regular search query. This allows you to retrieve objects from a Weaviates instance and then generate outputs based on the retrieved objects.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/text_rag/setup"
                                                },
                                                {
                                                    "name": "single_prompt",
                                                    "summary": "A 'single prompt' generation wil perform RAG queries on each retrieved object. This is useful when you want to transform each object separately, with the same prompt. This example finds entries in \"Movie\" whose vector best matches the query vector (for \"dystopian future\"). Then, instructs the large language model to translate the title of each movie into French.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/text_rag/single_prompt"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "text_searches",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "filters",
                                                    "summary": "Filters can be used to precisely refine search results. You can filter by properties as well as metadata, and you can combine multiple filters with and or or conditions to further narrow down the results. This example finds entries in \"Movie\" based on their similarity to the query \"dystopian future\", only from those released after 2020.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/text_searches/filters"
                                                },
                                                {
                                                    "name": "keyword_hybrid",
                                                    "summary": "You can also perform keyword (BM25) searches to find items based on their keyword similarity, or hybrid searches that combine BM25 and semantic/ vector searches. The limit parameter here sets the maximum number of results to return. The return_metadata parameter takes an instance of the MetadataQuery class to set metadata to return in the search results.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/text_searches/keyword_hybrid"
                                                },
                                                {
                                                    "name": "semantic",
                                                    "summary": "With Weaviate, you can perform semantic searches to find similar items. This is done by comparing the vector embeddings of the items in the database. This example finds entries in \"Movie\" based on their similarity to the query \"dystopian future\", and prints out the title and release year of the top 5 matches.",
                                                    "url": "https://weaviate.io/developers/academy/py/starter_text_data/text_searches/semantic"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "tokenization",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "basics",
                                            "summary": "Tokenization is the process of breaking text into smaller units, called tokens. This is an important step that impacts how text is processed in a variety of contexts. The choice of tokenization method will significantly impact the result of keyword search and filtering. This can cause it to either meet or miss the user's expectations.",
                                            "url": "https://weaviate.io/developers/academy/py/tokenization/basics"
                                        },
                                        {
                                            "name": "filters",
                                            "summary": "In this section, we'll work with an actual Weaviate instance to see how different tokenization methods impact filtering results. We are going to use a very small, custom dataset for demonstration purposes. We will create a simple object collection, with each object containing multiple properties.",
                                            "url": "https://weaviate.io/developers/academy/py/tokenization/filters"
                                        },
                                        {
                                            "name": "next_steps",
                                            "summary": "You have completed this course on tokenization for the inverted index. There are many more resources available to help you continue your learning journey. For non-English texts, especially those which do not rely on spaces between words, try the trigram or gse tokenization methods which were added in Weaviate v1.24.",
                                            "url": "https://weaviate.io/developers/academy/py/tokenization/next_steps"
                                        },
                                        {
                                            "name": "options",
                                            "summary": "Weaviate offers a variety of tokenization options to choose from. These options allow you to configure how keyword searches and filters are performed in Weaviate for each property. The main options are: word tokenization, lowercase and whitespace. Let's explore each of these options in more detail, including how they work.",
                                            "url": "https://weaviate.io/developers/academy/py/tokenization/options"
                                        },
                                        {
                                            "name": "searches",
                                            "summary": "A hybrid search combines results from a keyword search and a vector search. tokenization impacts the keyword search part of a hybrid search, while the vector search part is not impacted by tokenization. We will use a similar method as in the previous section, with a difference being that we will now perform a keywordSearch instead of a filter.",
                                            "url": "https://weaviate.io/developers/academy/py/tokenization/searches"
                                        }
                                    ]
                                },
                                {
                                    "name": "vector_index",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "dynamic",
                                            "summary": "The dynamic index is a flat index that is automatically converted to an hnsw index when the number of vectors in the collection exceeds a predetermined threshold. The flat index is very efficient for small collections, but its search time increases linearly with the number. The hnSW index, on the other hand, is more efficient for large collections but includes a memory overhead.",
                                            "url": "https://weaviate.io/developers/academy/py/vector_index/dynamic"
                                        },
                                        {
                                            "name": "flat",
                                            "summary": "The flat index is a very simple vector index that mimics a \"map\" data type. It simply stores the location of each vector, such that a search can be done by comparing the query vector to each vector in the collection. This leads to very low resource requirements, at the cost of search speed as the number of vectors increases.",
                                            "url": "https://weaviate.io/developers/academy/py/vector_index/flat"
                                        },
                                        {
                                            "name": "hnsw",
                                            "summary": "HNSW, or \"Hierarchical Navigable Small World\", is a powerful and flexible vector index type. It allows for fast and accurate searches of high-dimensional vectors. It also has the advantage of being very scalable, while being tunable to allow for different trade-offs between search speed, accuracy, and resource requirements.",
                                            "url": "https://weaviate.io/developers/academy/py/vector_index/hnsw"
                                        },
                                        {
                                            "name": "next_steps",
                                            "summary": "When choosing an index type, use the following as a guide. In a multi-tenant environment, the \"dynamic\" index may be a good default choice, as it will allow some tenants to remain in the flat index while others are automatically converted to hnsw when they grow.",
                                            "url": "https://weaviate.io/developers/academy/py/vector_index/next_steps"
                                        },
                                        {
                                            "name": "overview",
                                            "summary": "A database index is a data structure that organizes data to make searches more efficient. A vector index is designed to improve users' experience of searching for items in a large database. The choice and configuration of your vector index can significantly impact the performance of your imports as well as searches.",
                                            "url": "https://weaviate.io/developers/academy/py/vector_index/overview"
                                        }
                                    ]
                                },
                                {
                                    "name": "zero_to_mvp",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "hello_weaviate",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "examples_1",
                                                    "summary": "Learn how to use Weaviate to retrieve objects based on their similarity. Use various query types such as an input text, vector, or object. You will also compare vector search with keyword search to compare and contrast the two techniques, before learning how to combine the two.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/hello_weaviate/examples_1"
                                                },
                                                {
                                                    "name": "examples_2",
                                                    "summary": "The Sydney Opera House is one of the most famous buildings in the world. It was designed by Danish architect J\u00f8rn Utzon in the 1950s. The Opera House was officially opened by Queen Elizabeth II on 20 October 1973. It is now one of Australia's most popular tourist attractions.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/hello_weaviate/examples_2"
                                                },
                                                {
                                                    "name": "hands_on",
                                                    "summary": "This section includes queries using the OpenAI inference endpoint. If you don't already have an OpenAI account, we recommend creating one. At the time of writing, OpenAI provides trial credits which should be sufficient for these exercises. Create a client object for persistent access to your Weaviate instance. Set the following parameters:Host URL (required)Authentication details (optional)",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/hello_weaviate/hands_on"
                                                },
                                                {
                                                    "name": "intro_weaviate",
                                                    "summary": "Weaviate is an open-source vector database. The key difference is that they can perform tasks based on similarity. Using this type of search requires you to identify terms that may be relevant. Weaviate can also be used to store and retrieve data in a variety of ways.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/hello_weaviate/intro_weaviate"
                                                },
                                                {
                                                    "name": "overview_vectors",
                                                    "summary": "A vector is a series of numbers like [1, 0] or [0.513, 0.155, ...] Vectors like these are used to capture meaning. Modern machine learning models such as GPT-x use vectors to represent some \"essence\", or \"meaning\" of objects.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/hello_weaviate/overview_vectors"
                                                },
                                                {
                                                    "name": "set_up",
                                                    "summary": "Weaviate Cloud (WCD) is a managed service that runs Weaviate for you. WCD is the fastest way to create a new instance and requires the least amount of effort for users. You can run Weaviates using containerization solutions such as Docker and Kubernetes.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/hello_weaviate/set_up"
                                                },
                                                {
                                                    "name": "wrap_up",
                                                    "summary": "Weaviate is a free and open-source database and search engine. This unit explains what it is, and what it can do. You can then run Weaviate and perform vector searches yourself. At the end of the unit, you should be able to:use Weaviates to create your own projects.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/hello_weaviate/wrap_up"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "queries_1",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "aggregate",
                                                    "summary": "Aggregate is a powerful function that allows you to combine information from multiple objects into a single result. Available properties in Aggregate differ according to data types of the property being queried. For example, the available properties for a String property are different from those for an Integer property or a cross-reference.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/queries_1/aggregate"
                                                },
                                                {
                                                    "name": "filters",
                                                    "summary": "A filter is a way to specify additional criteria to be applied to the results. There are a number of available filters in Weaviate. The where filter is analogous to the WHERE clause in a SQL query. As in the SQL clause, the where filter can be used to apply a boolean conditional to the data.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/queries_1/filters"
                                                },
                                                {
                                                    "name": "get",
                                                    "summary": "In many use cases, retrieving objects from a Weaviate instance may be the most common operation. A basic, standalone, Get query might look as follows:What results do you expect? See if you can retrieve a list of passages most closely related to the input query.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/queries_1/get"
                                                },
                                                {
                                                    "name": "inside_queries_1",
                                                    "summary": "Weaviate is a free, open-source search engine. It uses the Get and Aggregate functions to search for objects. In this unit, we will look at how Weaviate performs a vector search. We will also look at various filters such as where, limit and offset.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/queries_1/inside_queries_1"
                                                },
                                                {
                                                    "name": "vector_parameters",
                                                    "summary": "Weaviate offers multiple vector search \"operators\" through which you can carry out vector searches. The nearVector operator can be used to look for objects which are the most similar to an explicitly provided vector. The vector value is passed using the vector argument as shown below.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/queries_1/vector_parameters"
                                                },
                                                {
                                                    "name": "wrap_up",
                                                    "summary": "In this unit, you have learned how to query Weaviate. You have also learned how certain search operators are used, and how filtering works. In the next module, we will learn how to build a Weaviates instance, from schema creation to data import. Now, you should be able to:",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/queries_1/wrap_up"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "queries_2",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "bm25",
                                                    "summary": "A BM25 search is one implementation of what is commonly called a 'keyword' search. It works by matching the search terms between the query and the data objects in the index. The query will search the question and answer properties of the objects, from which question property will be boosted by a factor of 3.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/queries_2/bm25"
                                                },
                                                {
                                                    "name": "generative",
                                                    "summary": "Generative search is a powerful tool that can transform your relationship with data. Instead of just simply fetching data from the database, Weaviate can transform the data before delivering it to you. To use generative search, a generative-xxx module must be enabled in the Weaviates instance.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/queries_2/generative"
                                                },
                                                {
                                                    "name": "hybrid",
                                                    "summary": "A hybrid search combines bm25 searches with a vector search. It produces rankings from a combination of the two results. This can produce helpful results when a search alone is not producing desired results. For example, it may be useful when you want particular keywords to weight the results a certain way.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/queries_2/hybrid"
                                                },
                                                {
                                                    "name": "wrap_up",
                                                    "summary": "In this unit, you learned about additional types of queries, including keyword (BM25), hybrid, generative and QnA searches. Combined with the tools that you learned earlier in Queries 1, you are now armed with a variety of search tools. Each of these tools allow you to interrogate the data differently.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/queries_2/wrap_up"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "schema_and_imports",
                                            "summary": "pass",
                                            "url": "parent_url",
                                            "children": [
                                                {
                                                    "name": "data_structure",
                                                    "summary": "How does Weaviate store data such that it can supports these queries? In this section, we take a look at some of the key components that allow Weaviates to perform these queries at speed. In particular, we'll take a looks at indexes and the schema, which acts as a blueprint for your data.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/schema_and_imports/data_structure"
                                                },
                                                {
                                                    "name": "example",
                                                    "summary": "We'll use data from a popular quiz game show called Jeopardy!. The original dataset can be found here on Kaggle, but we'll use a small subset from it, just containing 100 rows. The name refers to each row or item (note: singular), so I called itJeopardyQuestion. Then, I need to define properties and types.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/schema_and_imports/example"
                                                },
                                                {
                                                    "name": "import",
                                                    "summary": "Weaviate offers a \"batch import\" process to maximize the import speed. To create a Weaviate object, you must:Optionally, you can manually specify:We'll cover these in more detail later on. In the figure, a request is made to create an object based on the provided data. If the vector is not provided and a vectorizer is specified, Weaviates will send a request to the vectorizer module for a vector em.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/schema_and_imports/import"
                                                },
                                                {
                                                    "name": "preparation",
                                                    "summary": "The code to access depends on whether you have authentication turned on, or off. For this unit, you will require your own instance of Weaviate. A free sandbox instance should be just fine. Follow the \"Get Started with WCD\" section on this page and come back.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/schema_and_imports/preparation"
                                                },
                                                {
                                                    "name": "schema",
                                                    "summary": "Weaviate's Schema is the blueprint that defines its data structure for each class of objects. A class is a collection of objects of the same type. The only required parameter is class, as the rest can be inferred by Weaviate. Each class definition will include one or more properties, which must have a data type.",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/schema_and_imports/schema"
                                                },
                                                {
                                                    "name": "wrap_up",
                                                    "summary": "In this unit, you saw how data is structured in Weaviate, and got hands-on experience populating your own instance. You also had a chance to import data according to this schema, and learned how to use batch imports to ensure that imports are as fast as possible. Now, you should be able to:",
                                                    "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/schema_and_imports/wrap_up"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "setup",
                                            "summary": "If you are new to Weaviate, we recommend you start with one of the 100-level courses written with the v4 client API. This course was written for the Weaviates client API (v3), and is now deprecated. It is best practice to use virtual environments to isolate projects.",
                                            "url": "https://weaviate.io/developers/academy/py/zero_to_mvp/setup"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "theory",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "hello_weaviate",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "examples_1",
                                            "summary": "Learn how to use Weaviate to retrieve objects based on their similarity. Use various query types such as an input text, vector, or object. You will also compare vector search with keyword search to compare and contrast the two techniques, before learning how to combine the two.",
                                            "url": "https://weaviate.io/developers/academy/theory/hello_weaviate/examples_1"
                                        },
                                        {
                                            "name": "examples_2",
                                            "summary": "The Sydney Opera House is one of the most famous buildings in the world. It was designed by Danish architect J\u00f8rn Utzon in the 1950s. The Opera House was officially opened by Queen Elizabeth II on 20 October 1973. It is now one of Australia's most popular tourist attractions.",
                                            "url": "https://weaviate.io/developers/academy/theory/hello_weaviate/examples_2"
                                        },
                                        {
                                            "name": "intro_weaviate",
                                            "summary": "Weaviate is an open-source vector database. The key difference is that they can perform tasks based on similarity. Using this type of search requires you to identify terms that may be relevant. Weaviate can also be used to store and retrieve data in a variety of ways.",
                                            "url": "https://weaviate.io/developers/academy/theory/hello_weaviate/intro_weaviate"
                                        },
                                        {
                                            "name": "next_steps",
                                            "summary": "Weaviate Academy offers Python and TypeScript/JavaScript courses. We are constantly improving our documentation, so keep an eye out for new resources and updates, by signing up for our newsletter or following us on social media. If you have any questions or feedback, let us know in the user forum.",
                                            "url": "https://weaviate.io/developers/academy/theory/hello_weaviate/next_steps"
                                        },
                                        {
                                            "name": "overview_vectors",
                                            "summary": "A vector is a series of numbers like [1, 0] or [0.513, 0.155, ...] Vectors like these are used to capture meaning. Modern machine learning models such as GPT-x use vectors to represent some \"essence\", or \"meaning\" of objects.",
                                            "url": "https://weaviate.io/developers/academy/theory/hello_weaviate/overview_vectors"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "contributor-guide",
                    "summary": "pass",
                    "url": "parent_url",
                    "children": [
                        {
                            "name": "classification-benchmarks",
                            "summary": "This page includes benchmarking information. Use the weekly Newsquiz to test your knowledge of stories you saw on this page. At the bottom of the page, please share your feedback about our site and the content of this site. If you have any questions or feedback, let us know in the forum.",
                            "url": "https://weaviate.io/developers/contributor-guide/contextionary/classification-benchmarks"
                        },
                        {
                            "name": "getting-started",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "commit-guidelines",
                                    "summary": "When collaborating with git, each commit provides a frozen snapshot of work for you or others to review. Good practice is to create a commit per \"logical change\", so that each commit represents a \"unit\" of work done. Another big part of creating good commits is writing good commit messages.",
                                    "url": "https://weaviate.io/developers/contributor-guide/getting-started/commit-guidelines"
                                },
                                {
                                    "name": "git-and-github",
                                    "summary": "Git is a version control tool which keeps track of the changes you make to files. It allows you to go back to previous versions if necessary and keeping a record of what has been done. There are four major GitHub repositories of Weaviate, any of which you can contribute to.",
                                    "url": "https://weaviate.io/developers/contributor-guide/getting-started/git-and-github"
                                },
                                {
                                    "name": "improving-docs",
                                    "summary": "Weaviate's documentation is built with a static site builder (Docusaurus) with data from our GitHub repository. If you spot any typos, errors, unclear explanations, missing references or anything that stands out, please let us know, and we can work on it together.",
                                    "url": "https://weaviate.io/developers/contributor-guide/getting-started/improving-docs"
                                },
                                {
                                    "name": "reporting-bugs",
                                    "summary": "Bug reports are tracked as GitHub issues. Check first for a duplicate WIP (work in progress) issue. If not, open an issue in that repository with a complete, specific and accurate description. We also encourage you to check out this more detailed guide on Writing great Bug Reports from our team.",
                                    "url": "https://weaviate.io/developers/contributor-guide/getting-started/reporting-bugs"
                                },
                                {
                                    "name": "suggesting-enhancements",
                                    "summary": "You are welcome to implement your own ideas and contribute code to Weaviate. We love to hear your ideas. Suggestions are tracked as GitHub issues, such as these in [Weaviate core] (https://github.com/weaviate/weAViate/issues)",
                                    "url": "https://weaviate.io/developers/contributor-guide/getting-started/suggesting-enhancements"
                                },
                                {
                                    "name": "writing-blogs",
                                    "summary": "Weaviate community produces a lot of great content including blog posts, tutorials, and demo applications. To help these reach the broader community, we maintain a curated list of these in our Awesome Weaviate repository. If you would like to share your own work, we would love to hear from you.",
                                    "url": "https://weaviate.io/developers/contributor-guide/getting-started/writing-blogs"
                                }
                            ]
                        },
                        {
                            "name": "weaviate-clients",
                            "summary": "There are currently four clients developed for Weaviate's APIs. These clients, and all future clients are and will be developed according to the following guidelines: It is more important that a client feels native todevelopers used to a specific language than it is to have all clients exactly the same.",
                            "url": "https://weaviate.io/developers/contributor-guide/weaviate-clients"
                        },
                        {
                            "name": "weaviate-core",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "cicd",
                                    "summary": "Weaviate is not a continuously deployed application, as it is published as releases and users install Weaviate themselves. Nevertheless, we aim to treat it with the same level of CI/CD-maturity as one would a continuous deployedapplication. It is therefore not feasible to allow for true trunk-based development.",
                                    "url": "https://weaviate.io/developers/contributor-guide/weaviate-core/cicd"
                                },
                                {
                                    "name": "parsing-cross-refs",
                                    "summary": "Objects are parsed twice: First, closest to disk, immediately after reading-in the byte blob. A second time at the root level of the db.DB type, the whole request is parsed again (recursively) and cross-refs are resolved as requested by the user.",
                                    "url": "https://weaviate.io/developers/contributor-guide/weaviate-core/parsing-cross-refs"
                                },
                                {
                                    "name": "setup",
                                    "summary": "This page describes how to run Weaviate from source (git checkout / tarball) locally. The default configuration is local-development which will run the server locally with the text2vec-contextionary and backup-filesystem modules. For example, the setup below uses Docker Compose to spin up Prometheus and Grafana instances.",
                                    "url": "https://weaviate.io/developers/contributor-guide/weaviate-core/setup"
                                },
                                {
                                    "name": "structure",
                                    "summary": "Weaviate's package structure is modelled after CleanArchitecture. The most central \"entities\" are found in the ./entities subpackages. All of these packages areagnostic of the API-types (GraphQL, REST, etc) as well as the usecases/kinds package.",
                                    "url": "https://weaviate.io/developers/contributor-guide/weaviate-core/structure"
                                },
                                {
                                    "name": "tests",
                                    "summary": "Weaviate Core uses a typical Test Pyramid approach. The tests are grouped into the following three levels:Unit tests test the smallest possible unit, mostly a struct in golang. Unit tests are designed to validate the business logic and not the internals.Integration tests test anything that crosses a boundary.",
                                    "url": "https://weaviate.io/developers/contributor-guide/weaviate-core/tests"
                                }
                            ]
                        },
                        {
                            "name": "weaviate-modules",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "architecture",
                                    "summary": "This page describes the code-level architecture of media2vec. The module architecture is dependent on the respective module. A module is essentially any struct that implements a specific Golang interface. The main interface is a really small one - a module essentially only has to provide a Name() string and Init(...) error method.",
                                    "url": "https://weaviate.io/developers/contributor-guide/weaviate-modules/architecture"
                                },
                                {
                                    "name": "how-to-build-a-new-module",
                                    "summary": "The visualization below shows how modules are part of and connected to Weaviate. If you have your own vectorizer, machine learning or other model that you want to use, you can build your own Weaviates Module. Everything that is blue belongs to a specific module (more than one module can be attached, but here we show one module)",
                                    "url": "https://weaviate.io/developers/contributor-guide/weaviate-modules/how-to-build-a-new-module"
                                },
                                {
                                    "name": "overview",
                                    "summary": "The Module system is a way to extend Weaviate's functionality. The user decides which modules are activated at startup through configuration. modules provide access to various machine-learning models which can be used to turn media into vectors at query and import time. We are going through the text2vec-transformers module as an example.",
                                    "url": "https://weaviate.io/developers/contributor-guide/weaviate-modules/overview"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "tags",
                    "summary": "pass",
                    "url": "parent_url",
                    "children": [
                        {
                            "name": "engineering",
                            "summary": "No web page text found, so no summary available.",
                            "url": "https://weaviate.io/developers/tags/engineering"
                        },
                        {
                            "name": "google-cloud-marketplace",
                            "summary": "CNN.com will feature iReporter photos in a weekly Travel Snapshots gallery. Please submit your best shots of the U.S. for next week. Visit CNN.com/Travel each week for a new gallery of snapshots. Visit http://www.dailymail.co.uk/travel/features/travellers-take-pictures-of-the-united-kingdom.html#storylink=cpy. We'll feature some of the best shots in next week's gallery.",
                            "url": "https://weaviate.io/developers/tags/google-cloud-marketplace"
                        },
                        {
                            "name": "installation",
                            "summary": "CNN.com will feature iReporter photos in a weekly Travel Snapshots gallery. Please submit your best shots of the U.S. for next week. Visit CNN.com/Travel each week for a new gallery of snapshots. Visit http://www.dailymail.co.uk/travel/features/travellers-take-pictures-of-the-united-kingdom.html#storylink=cpy. We'll feature some of the best shots in next week's gallery.",
                            "url": "https://weaviate.io/developers/tags/installation"
                        },
                        {
                            "name": "release",
                            "summary": "No web page text found, so no summary available.",
                            "url": "https://weaviate.io/developers/tags/release"
                        }
                    ]
                },
                {
                    "name": "wcs",
                    "summary": "pass",
                    "url": "parent_url",
                    "children": [
                        {
                            "name": "cluster-status",
                            "summary": "Weaviate Cloud (WCD) provides a web interface and an API endpoint that provide information about your Weaviate instance. Each cluster has a Details button. To get cluster details programmatically, use the nodes REST endpoint. For help with Serverless, Enterprise SaaS, and Bring Your Own Cloud accounts, contact Weaviates support directly to open a support ticket.",
                            "url": "https://weaviate.io/developers/wcs/cluster-status"
                        },
                        {
                            "name": "connect",
                            "summary": "There are multiple ways to connect to Weaviate Cloud (WCD) The WCD console uses your email address and password for authentication. The built in Query app connects directly to clusters in your WCD organization without any additional authentication. By default, API keys are enabled for all WCD clusters.",
                            "url": "https://weaviate.io/developers/wcs/connect"
                        },
                        {
                            "name": "console",
                            "summary": "The Weaviate Cloud (WCD) query application ( query app) is a browser-based GraphQL IDE. Use the query app to work interactively with your WCD clusters. The query app can also connect to other Weaviates instances if you have the proper authorization credentials.",
                            "url": "https://weaviate.io/developers/wcs/console"
                        },
                        {
                            "name": "create-instance",
                            "summary": "Weaviate Cloud (WCD) provides two instance types. To create a cluster, click the 'Create cluster' button on the WCD Dashboard page. By default, API keys are enabled for all WCD clusters. Serverless clusters have an administrator key and a read-only key. Sandbox clusters only have a administrator key.",
                            "url": "https://weaviate.io/developers/wcs/create-instance"
                        },
                        {
                            "name": "faq",
                            "summary": "WCD has automated, daily backups. Clusters are provisioned for common usage scenarios. WCD monitors each instance to determine when a cluster needs to be resized. If you want to customize your cluster provisioning, contact our support team at support@weaviate.io to discus.",
                            "url": "https://weaviate.io/developers/wcs/faq"
                        },
                        {
                            "name": "platform",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "billing",
                                    "summary": "Weaviate Cloud uses Stripe for billing. Sandbox clusters are free. You do not need a billing account to create a Sandbox cluster.Serverless clusters are charged for resource usage. The monthly charge is determined by your usage and your support level. Weaviate offers three levels of support, Standard, Professional, and Business Critical.",
                                    "url": "https://weaviate.io/developers/wcs/platform/billing"
                                },
                                {
                                    "name": "create-account",
                                    "summary": "Weaviate Cloud (WCD) has an interactive console. Create a user account, then login to manage WCD clusters. Follow these steps to create a new WCD account. After you verify your email, you can log into the WCD Console. For help with Serverless, Enterprise SaaS, and Bring Your Own Cloud accounts, contact Weaviate support.",
                                    "url": "https://weaviate.io/developers/wcs/platform/create-account"
                                },
                                {
                                    "name": "manage-api-keys",
                                    "summary": "By default, API keys are enabled for all WCD clusters. There are two types of API key, ReadOnly and Admin.Serverless clusters have an administrator key and a read-only key. If you have a Serverless cluster, you can create and delete API keys.",
                                    "url": "https://weaviate.io/developers/wcs/platform/manage-api-keys"
                                },
                                {
                                    "name": "multi-factor-auth",
                                    "summary": "Multi-factor authentication (MFA) increases the security of browser logins. MFA is not enabled by default. Use API keys to connect browser based client applications to WCD. For help with Serverless, Enterprise SaaS, and Bring Your Own Cloud accounts, contact Weaviate support.",
                                    "url": "https://weaviate.io/developers/wcs/platform/multi-factor-auth"
                                },
                                {
                                    "name": "support-levels",
                                    "summary": "Paid support is available for Serverless Clusters, Weaviate Enterprise SaaS, and Bring your Own Cloud clusters. Sandboxes and self-hosted clusters are not eligible for paid support. Professional support is email based and is available 24 hours a day, seven days a week.",
                                    "url": "https://weaviate.io/developers/wcs/platform/support-levels"
                                },
                                {
                                    "name": "users-and-organizations",
                                    "summary": "Accounts in Weaviate Cloud (WCD) are based on organizations. There is an organization for each user account. Users can belong to more than one organization. Each user in an organization has full access to the modify the organization and its clusters. To create a new organization, follow these steps.",
                                    "url": "https://weaviate.io/developers/wcs/platform/users-and-organizations"
                                },
                                {
                                    "name": "version",
                                    "summary": "Weaviate Cloud (WCD) hosts clusters that run the Weaviate core database server. WCD runs the current production version of Weaviates core. W CD does not automatically update clusters, however if an existing cluster has a security vulnerability, WCD upgrades the cluster when a fix is released. The WCD console informs you when a newer version is available. Consider your business needs and upgrade your cluster when you have a suitable maintenance window.",
                                    "url": "https://weaviate.io/developers/wcs/platform/version"
                                }
                            ]
                        },
                        {
                            "name": "quickstart",
                            "summary": "Weaviate Cloud has short-term, sandbox clusters and permanent, serverless clusters. To create a cluster, click the 'Create cluster' button on the WCD Dashboard page. The sandbox is free for 14 days, the sandbox expires and all data is deleted. To retrieve a copy of your sandbox data before it is deleted, use the cursor API.",
                            "url": "https://weaviate.io/developers/wcs/quickstart"
                        },
                        {
                            "name": "sandbox",
                            "summary": "Weaviate Cloud (WCD) provides two instance types. Sandbox clusters run a full version of the Weaviate core database. Sandboxes are fully featured, but they have a limited lifetime and they run on scaled down infrastructure compared to serverless clusters. If you are working through a course in Weaviates Academy, consider using a sandbox to complete the lessons.",
                            "url": "https://weaviate.io/developers/wcs/sandbox"
                        },
                        {
                            "name": "upgrade",
                            "summary": "Check for a Weaviate server update. The console displays a notification message in the console when a new version is available. The notification displays a list of clusters that can be upgraded. Consider using high availability (HA) clusters for production workloads. An HA cluster upgrades one node at a time so the cluster is available during the upgra.",
                            "url": "https://weaviate.io/developers/wcs/upgrade"
                        }
                    ]
                },
                {
                    "name": "weaviate",
                    "summary": "pass",
                    "url": "parent_url",
                    "children": [
                        {
                            "name": "api",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "graphql",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "additional-operators",
                                            "summary": "Pagination is not a cursor-based implementation. This has the following implications: The autocut function limits results based on discontinuities in the result set. The query stops returning results after the specified number of jumps. The Get and Explore functions support offset. For more details, see performance considerations.",
                                            "url": "https://weaviate.io/developers/weaviate/api/graphql/additional-operators"
                                        },
                                        {
                                            "name": "additional-properties",
                                            "summary": "GraphQL uses 'metadata' to retrieve data. The fields id, vector, certainty, distance, featureProjection and classification are available by default. Additional properties may be available for each query, depending on the query type as well as enabled Weaviate modules. For examples, see the related how to page.",
                                            "url": "https://weaviate.io/developers/weaviate/api/graphql/additional-properties"
                                        },
                                        {
                                            "name": "aggregate",
                                            "summary": "This page covers aggregation queries. They are collectively referred to as Aggregate queries within. An Aggregate query can aggregate over an entire collection, or the results of a search. Each query can include any of the following types of arguments:Each data type has its own set of available aggregated properties.",
                                            "url": "https://weaviate.io/developers/weaviate/api/graphql/aggregate"
                                        },
                                        {
                                            "name": "explore",
                                            "summary": "Use Explore to perform vector searches across multiple collections. The Explore function is disabled where multiple inference (e.g. text2vec-xxx) modules are enabled. Explore is not available on Weaviate Cloud as its clusters are pre-configured with multiple inference modules for AWS, Cohere, Google, OpenAI and so on.",
                                            "url": "https://weaviate.io/developers/weaviate/api/graphql/explore"
                                        },
                                        {
                                            "name": "filters",
                                            "summary": "Weaviate doesn't have an operator to invert a filter (e.g. Not Like ... ). If you would like us to add one, please upvote the issue. Conditional filters may be added to queries such as Object-level and Aggregate queries, as well as batch deletion.",
                                            "url": "https://weaviate.io/developers/weaviate/api/graphql/filters"
                                        },
                                        {
                                            "name": "get",
                                            "summary": "This page covers object-level query functions. They are collectively referred to as Get queries within. A Get query requires the target collection to be specified. Metadata retrieval is optional in both GraphQL and gRPC calls. You can use retrieve groups of objects that match the query. The number of groups and objects per group can be limited.",
                                            "url": "https://weaviate.io/developers/weaviate/api/graphql/get"
                                        },
                                        {
                                            "name": "search-operators",
                                            "summary": "This page covers the search operators that can be used in queries. Only one search operator can be added to queries on the collection level. These operators are available in all Weaviate instances regardless of configuration.Module-specific search operators are made available in certain Weaviates.",
                                            "url": "https://weaviate.io/developers/weaviate/api/graphql/search-operators"
                                        }
                                    ]
                                },
                                {
                                    "name": "grpc",
                                    "summary": "GRPC is a high-performance, open-source universal RPC framework that is contract-based. It is based on HTTP/2 and Protocol Buffers, and is therefore very fast and efficient. The latest (v4) Weaviate Python client library supports gRPC, and other client libraries will follow.",
                                    "url": "https://weaviate.io/developers/weaviate/api/grpc"
                                },
                                {
                                    "name": "rest",
                                    "summary": "No web page text found, so no summary available.",
                                    "url": "https://weaviate.io/developers/weaviate/api/rest"
                                },
                                {
                                    "name": "rest_legacy",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "backups",
                                            "summary": "Weaviate uses gzip compression by default. See the Backups page for a general introduction, configuration, and tech background of Backups. Once the modules are enabled and the configuration is provided, you can start abackup on any running instance with a single HTTP request.",
                                            "url": "https://weaviate.io/developers/weaviate/api/rest_legacy/backups"
                                        },
                                        {
                                            "name": "batch",
                                            "summary": "For best performance, we recommend using batching for insertion and deletion. For sending data objects to Weaviate in bulk, use the /v1/batch/objects endpoint. For the long-form beacon, you always need to specify the full beacon, including the referenceproperty name.",
                                            "url": "https://weaviate.io/developers/weaviate/api/rest_legacy/batch"
                                        },
                                        {
                                            "name": "classification",
                                            "summary": "Weaviate's classification features allows you to classify data objects based on their vector. Text2vec-contextionary is enabled, contextual classification can also be used. Classification can triggered to run in the background with a POST request, and the GET method can be used to view its status.",
                                            "url": "https://weaviate.io/developers/weaviate/api/rest_legacy/classification"
                                        },
                                        {
                                            "name": "meta",
                                            "summary": "The meta endpoint accepts a GET request and returns the following fields. The following command is used to retrieve the data from the meta endpoint. The command:returns:\u0153\u02da\u02da\u2019\u02da \u2018\u0153\u2019\u2019 \u2018\u02da\u00a0\u2018\u02d9 \u2019\u02d9\u201d\u2019\u00a0\u2009\u2019 \u00a0\u201c\u2018\u2019.\u201d \u2018\u2009.\u2019, \u2018%s\u2019%s%s%.\u2019%, \u2018#\u2019 %s%\u00a0\u2019#\u201d, \u201c%s+\u2019%.\u201d,. \u2019%\u2019,. \ufffd",
                                            "url": "https://weaviate.io/developers/weaviate/api/rest_legacy/meta"
                                        },
                                        {
                                            "name": "modules",
                                            "summary": "The /v1/ modules endpoint is available for all modules that are connected to your Weaviate instance. The available module endpoints thus depend on how you configured your weaviate. For API references of specific modules, visit the specific modules pages. If you have any questions or feedback, let us know in the user forum.",
                                            "url": "https://weaviate.io/developers/weaviate/api/rest_legacy/modules"
                                        },
                                        {
                                            "name": "nodes",
                                            "summary": "The nodes endpoint accepts a GET request and returns information about relevant nodes in the cluster. The query can be for the entire cluster, or for a particular collection. The nodes have the following fields:The following command will retrieve summary information about all nodes in a cluster:Example output:",
                                            "url": "https://weaviate.io/developers/weaviate/api/rest_legacy/nodes"
                                        },
                                        {
                                            "name": "objects",
                                            "summary": "Use the after operator to retrieve all objects from a Weaviate instance. The after operator retrieves objects of a class based on the order of ids. You can pass the id of the last retrieved object as a cursor to start the next page. The offset parameter is a flexible way to page results as it allows use with parameters like sort.",
                                            "url": "https://weaviate.io/developers/weaviate/api/rest_legacy/objects"
                                        },
                                        {
                                            "name": "schema",
                                            "summary": "Schema endpoint is for creating, reading, updating and deleting collections (also called collections) and properties. From v1.5.0 onwards, manual creation of a schema is optional. You can specify as few parameters as the collection name. For more details on these parameters, see the Schema configuration reference page.",
                                            "url": "https://weaviate.io/developers/weaviate/api/rest_legacy/schema"
                                        },
                                        {
                                            "name": "well-known",
                                            "summary": "The live endpoint checks if the application is alive. You can use it for a Kubernetes liveness probe. The discovery endpoint accepts a GET request. If OpenID Connect (OIDC) authentication is enabled, the endpoint returns configuration details. If there is no OIDC provider, the Endpoint returns a 404 status code.",
                                            "url": "https://weaviate.io/developers/weaviate/api/rest_legacy/well-known"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "ann",
                            "summary": "This vector database benchmark is designed to measure and illustrate Weaviate's Approximate Nearest Neighbor (ANN) performance for a range of real-life use cases. The benchmark is open source, so you can reproduce the results yourself. For good starting point values and performance tuning advice, see HNSW Configuration Tips.",
                            "url": "https://weaviate.io/developers/weaviate/benchmarks/ann"
                        },
                        {
                            "name": "client-libraries",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "community",
                                    "summary": "Weaviate supports client libraries for these languages: English, German, French, Spanish, Italian, Portuguese, Spanish. Weaviate is not officially maintained by these community contributed libraries. To contribute to these libraries, contact the maintainers directly. If you have a Weaviates client library you would like to add here, let us know in the forum or on Slack.",
                                    "url": "https://weaviate.io/developers/weaviate/client-libraries/community"
                                },
                                {
                                    "name": "go",
                                    "summary": "The Weaviate Go client is compatible with Go 1.16+. The client doesn't support the old Go modules system. The current Go client version is v4.14.0. The suitable authentication options and methods for the client largely depend on the specific configuration of the Weaviates instance.",
                                    "url": "https://weaviate.io/developers/weaviate/client-libraries/go"
                                },
                                {
                                    "name": "java",
                                    "summary": "This API client is compatible with Java 8 and beyond. The current Java client version is v4.7.0. The Java client offers multiple options for authenticating against Weaviate, including multiple OIDC authentication flows. The suitable authentication options and methods for the client largely depend on the specific configuration of the Weaviates instance.",
                                    "url": "https://weaviate.io/developers/weaviate/client-libraries/java"
                                },
                                {
                                    "name": "python",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "python_v3",
                                            "summary": "The v3 client is not to be used with with the gRPC API that was introduced in Weaviate 1.22. The v3 Python library is available on PyPI.org. The package can be installed using pip. The client is developed and tested for Python 3.7 and higher.",
                                            "url": "https://weaviate.io/developers/weaviate/client-libraries/python/python_v3"
                                        },
                                        {
                                            "name": "v3_v4_migration",
                                            "summary": "The v4 Weaviate Python client API is a complete rewrite, aimed at an improved overall user experience. It is therefore also very different to the v3 API, and will require re-learning of changed patterns. The current Python client version is v4.6.3. For code examples, refer to the documentation throughout the site.",
                                            "url": "https://weaviate.io/developers/weaviate/client-libraries/python/v3_v4_migration"
                                        }
                                    ]
                                },
                                {
                                    "name": "typescript",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "typescript-v2",
                                            "summary": "The TypeScript client can be used for both JavaScript and TypeScript scripts. The client is version v3.0.5. The suitable authentication options and methods for the client largely depend on the client's version of Weaviate. Use the TypeScript v3 client for new projects.",
                                            "url": "https://weaviate.io/developers/weaviate/client-libraries/typescript/typescript-v2"
                                        },
                                        {
                                            "name": "typescript-v3",
                                            "summary": "The Weaviate TypeScript client supports TypeScript and JavaScript. Use the TypeScript v3 client for new projects. If your application is browser based, consider using the Type Script client v2. The v3 Client uses ES Modules and CommonJS compatibility. The client is version v3.0.5. See v3 packages for details.",
                                            "url": "https://weaviate.io/developers/weaviate/client-libraries/typescript/typescript-v3"
                                        },
                                        {
                                            "name": "v2_v3_migration",
                                            "summary": "The Weaviate TypeScript client supports TypeScript and JavaScript. The v3 client supports server side development (Node.js hosted). See v3 packages for details. If your application is browser based, consider using the TypeScript clients v2 and v3. The default gRPC port is 50051. To map the Weaviates gR PC port in your Docker container to a local port, add this code to your docker-compose.yml file.",
                                            "url": "https://weaviate.io/developers/weaviate/client-libraries/typescript/v2_v3_migration"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "concepts",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "cluster",
                                    "summary": "Weaviate can be scaled horizontally by being run on a set of multiple nodes in a cluster. There are (at least) three distinct motivations to scale out horizontally which all will lead to different setups. See Sharding vs Replication below for trade-offs involved when running multiple shards.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/cluster"
                                },
                                {
                                    "name": "data",
                                    "summary": "Weaviate stores data objects in class-based collections. Each data object in Weaviate belongs to a collection and has one or more properties. Data objects are represented as JSON-documents. Objects normally include a vector that is derived from a machine learning model. The vector is also called an embedding or a vector embedding.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/data"
                                },
                                {
                                    "name": "indexing",
                                    "summary": "Weaviate supports two types of indices. One of Weaviate's core strengths is combining the ANN index with an inverted index. Only those algorithms which support CRUD can be used in Weaviates. The system is plug-and-playable so that we can always add other algorithms in the future.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/indexing"
                                },
                                {
                                    "name": "interface",
                                    "summary": "Weaviate has a RESTful API and a GraphQL API. The client libraries in all languages support all API functions. Some clients, e.g. the Python client, have additional functionality, such as full schema management and batching operations. Weaviate should be easy to understand, intuitive to use and valuable.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/interface"
                                },
                                {
                                    "name": "modules",
                                    "summary": "Weaviate has a modularized structure. Functionality such as vectorization or backups is handled by optional modules. Weaviate does not know how to vectorize an object, i.e. how to calculate the vectors given an object. You can choose and attach a vectorizer module that best fits your use case.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/modules"
                                },
                                {
                                    "name": "prefiltering",
                                    "summary": "Weaviate provides powerful filtered vector search capabilities. You can eliminate candidates in your \"fuzzy\" vector search based on individual properties. Thanks to Weaviate's efficient pre-filtering mechanism, you can keep the recall high - even when filters are very restrictive.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/prefiltering"
                                },
                                {
                                    "name": "replication-architecture",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "cluster-architecture",
                                            "summary": "Weaviate uses the Raft consensus algorithm for schema replication, implemented with Hashicorp's raft library. A schema change is forwarded to the leader node, which applies the change to its log before replicating it to the follower nodes. This architecture ensures that schema changes are consistent across the cluster, even in the event of (a minority of) node failures.",
                                            "url": "https://weaviate.io/developers/weaviate/concepts/replication-architecture/cluster-architecture"
                                        },
                                        {
                                            "name": "consistency",
                                            "summary": "Data consistency is a property of a database that refers to whether data in different nodes do or do not match. In Weaviate, data consistency is tunable, so it's up to you how you make the trade-off between A and C. The strength of consistency can be determined by applying the following conditions:The data schema in Weaviates is strongly consistent.",
                                            "url": "https://weaviate.io/developers/weaviate/concepts/replication-architecture/consistency"
                                        },
                                        {
                                            "name": "motivation",
                                            "summary": "Weaviate uses the Raft consensus algorithm for schema replication. This is a leader-based consensus algorithm, where a leader node is responsible for schema changes. Use of Raft ensures that schema changes are consistent across the cluster, even in the event of (a minority of) node failures.",
                                            "url": "https://weaviate.io/developers/weaviate/concepts/replication-architecture/motivation"
                                        },
                                        {
                                            "name": "multi-dc",
                                            "summary": "Multi-Data center (Multi-DC) replication enables you to have multiple copies of the data on multiple servers across more than one data center. This form of replication is not yet supported in v1.17 and v 1.18. If you are interested in this feature, upvote this GitHub issue.",
                                            "url": "https://weaviate.io/developers/weaviate/concepts/replication-architecture/multi-dc"
                                        },
                                        {
                                            "name": "philosophy",
                                            "summary": "Weaviate powers site search, recommendation, knowledge extraction, and other information retrieval cases. The architecture that guides the principles for Weaviate\u2019s replication systems is modeled after how users typically use Weaviates. The two different architectures for schema and data replication are based on the Raft consensus algorithm.",
                                            "url": "https://weaviate.io/developers/weaviate/concepts/replication-architecture/philosophy"
                                        }
                                    ]
                                },
                                {
                                    "name": "reranking",
                                    "summary": "Reranking seeks to improve search relevance by reordering the result set returned by a retriever with a different model. It computes a relevance score between the query and each data object, and returns the list of objects sorted from the most to the least relevant. With our reranker modules, you can conveniently perform multi-stage searches without leaving Weaviate.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/reranking"
                                },
                                {
                                    "name": "resources",
                                    "summary": "Weaviate scales well for large projects. Smaller projects, less than 1M objects, do not require resource planning. For medium and large-scale projects, you should plan how to get the best performance from your resources. CPU and memory are the primary resources for Weaviate instances. Depending on the modules you use, GPUs may also play a role.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/resources"
                                },
                                {
                                    "name": "storage",
                                    "summary": "Weaviate is a persistent and fault-tolerant database. This page gives you an overview of how objects and vectors are stored within Weaviate and how an inverted index is created at import time. Each class in Weaviates user-defined schema leads to the creation of an index internally. An index is a wrapper type comprised of one or many shards.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/storage"
                                },
                                {
                                    "name": "vector-index",
                                    "summary": "Weaviate's vector-first storage system takes care of all storage operations with a vector index. The dynamic index can even start off as a flat index and then dynamically switch to the HNSW index as it scales past a threshold. Weavia supports two types of vector indexing:Available starting in v1.25.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/vector-index"
                                },
                                {
                                    "name": "vector-quantization",
                                    "summary": " Vector quantization reduces the memory footprint of the vector index by compressing the vector embeddings. Weaviate currently offers two vector quantization techniques:Product quantization is a multi-step quantization technique that is available for use with hnsw indexes in Weaivate. In neural networks, quantification reduces the values of the weights or activations of the model stored as a 32-bit floating-point number (4 bytes) to a lower precision number, such as an 8-bit integer.",
                                    "url": "https://weaviate.io/developers/weaviate/concepts/vector-quantization"
                                }
                            ]
                        },
                        {
                            "name": "config-refs",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "datatypes",
                                    "summary": "The cross-reference type is the graph element of Weaviate. It allows you to link to any number of instances of a given class. In the schema you can define multiple classes to which a property can point, in a list of strings. The strings in the dataType list are names of classes defined elsewhere in the schema.",
                                    "url": "https://weaviate.io/developers/weaviate/config-refs/datatypes"
                                },
                                {
                                    "name": "distances",
                                    "summary": "If not specified explicitly, the default distance metric in Weaviate iscosine. It can be set in the vectorIndexConfig field as part of the schema to any of the following types: larger distance values indicate lower similarity. If you're missing your favorite distance type and would like to contribute it, we'd be happy to review your PR.",
                                    "url": "https://weaviate.io/developers/weaviate/config-refs/distances"
                                },
                                {
                                    "name": "env-vars",
                                    "summary": "To configure Weaviate in a Docker or a Kubernetes deployment, set these environment variables. For Boolean environment variables, \"on\", \"enabled\", \"1\", and \"true\" are interpreted as true. If you have any questions or feedback, let us know in the user forum.",
                                    "url": "https://weaviate.io/developers/weaviate/config-refs/env-vars"
                                },
                                {
                                    "name": "meta",
                                    "summary": "You can retrieve metadata about the Weaviate instance, such as:returns:If you have any questions or feedback, let us know in the user forum.  Weaviates are free to download and to use for as long as you want. For more information, visit the official website.",
                                    "url": "https://weaviate.io/developers/weaviate/config-refs/meta"
                                },
                                {
                                    "name": "nodes",
                                    "summary": "You can retrieve information about individual nodes in a Weaviate cluster. The query can be for the entire cluster, or for a particular collection. The nodes endpoint returns an array of nodes. If you have any questions or feedback, let us know in the user forum.",
                                    "url": "https://weaviate.io/developers/weaviate/config-refs/nodes"
                                },
                                {
                                    "name": "oidc",
                                    "summary": "If OpenID Connect (OIDC) authentication is enabled, its details will be available through the /v1/.well-known/openid-configuration endpoint. The discovery endpoint accepts a GET request:If there is an OIDC provider, the endpoint returns the following fields:",
                                    "url": "https://weaviate.io/developers/weaviate/config-refs/oidc"
                                },
                                {
                                    "name": "schema",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "multi-vector",
                                            "summary": "Weaviate collections support multiple, named vectors. Each vector space has its own index, its own compression, and its own vectorizer. This means you can create vectors for properties, use different vectorization models, and apply different metrics to the same object. Single vector collections are valid and continue to use the original collection syntax.",
                                            "url": "https://weaviate.io/developers/weaviate/config-refs/schema/multi-vector"
                                        },
                                        {
                                            "name": "vector-index",
                                            "summary": "Weaviate collections support multiple, named vectors. Each vector space has its own index, its own compression, and its own vectorizer. This means you can create vectors for properties, use different vectorization models, and apply different metrics to the same object. Dynamic indexing is an experimental feature. Use with caution.",
                                            "url": "https://weaviate.io/developers/weaviate/config-refs/schema/vector-index"
                                        }
                                    ]
                                },
                                {
                                    "name": "status",
                                    "summary": "The live endpoint checks if the application is alive. You can use it for a Kubernetes liveness probe. Various cluster statuses are available in Weaviate. The v1//schema/cluster-status endpoint displays the status of the schema synchronization.",
                                    "url": "https://weaviate.io/developers/weaviate/config-refs/status"
                                },
                                {
                                    "name": "telemetry",
                                    "summary": "Weaviate collects some telemetry data. This data helps Weaviate to identify usage trends and improve our software for our users. You can disable telemetry at any time. If you have any questions or feedback, let us know in the user forum. Back to the page you came from.",
                                    "url": "https://weaviate.io/developers/weaviate/config-refs/telemetry"
                                }
                            ]
                        },
                        {
                            "name": "configuration",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "authentication",
                                    "summary": "Weaviate offers an optional authentication scheme using API keys and OpenID Connect (OIDC), which can enable various authorizations levels. API key and OIDC authentication can be both enabled at the same time. Weaviate Cloud (WCD) instances are pre-configured for API key authentication.",
                                    "url": "https://weaviate.io/developers/weaviate/configuration/authentication"
                                },
                                {
                                    "name": "authorization",
                                    "summary": " authorization plugin allows Weaviate to provide differentiated access to users based on their authentication status. Along with allowing or disallowing anonymous access, it can differentiate between a user who is in the admin list, or on the read-only list. It is not currently possible to assign only some rights to a specific user.",
                                    "url": "https://weaviate.io/developers/weaviate/configuration/authorization"
                                },
                                {
                                    "name": "backups",
                                    "summary": "Weaviate's Backup feature is designed to work natively with cloud technology. Single node backup is available strating in Weaviate v1.15. Multi-node backups is avaiable starting in v 1.16. All service-discovery and authentication-related configuration is set using environment variables.",
                                    "url": "https://weaviate.io/developers/weaviate/configuration/backups"
                                },
                                {
                                    "name": "bq-compression",
                                    "summary": "Binary quantization (BQ) is a vector compression technique that can reduce the size of a vector. BQ is available for the flat index type from v1.23 onwards and for the hnsw index  type fromv1.24. To use BQ, enable it as shown below and add data to the collection.",
                                    "url": "https://weaviate.io/developers/weaviate/configuration/bq-compression"
                                },
                                {
                                    "name": "modules",
                                    "summary": "Weaviate Cloud (WCD) instances come with modules pre-configured. Weaviate's functionality can be customized by using modules. This page explains how to enable and configure modules. At the instance level, you can: enable modules by setting the appropriate environment variables as shown below.",
                                    "url": "https://weaviate.io/developers/weaviate/configuration/modules"
                                },
                                {
                                    "name": "monitoring",
                                    "summary": "Weaviate can expose Prometheus-compatible metrics for monitoring. A standard Prometheus/Grafana setup can be used to visualize metrics on various dashboards. Metrics are typically scraped into a time-series database, such as Prometheus. Weaviate will expose the metrics at <hostname>:2112/metrics.",
                                    "url": "https://weaviate.io/developers/weaviate/configuration/monitoring"
                                },
                                {
                                    "name": "persistence",
                                    "summary": "When running Weaviate with Docker or Kubernetes, you can persist its data by mounting a volume to store the data outside of the containers. Doing so will cause the Weaviates instance to also load the data from the mounted volume when it is restarted.",
                                    "url": "https://weaviate.io/developers/weaviate/configuration/persistence"
                                },
                                {
                                    "name": "pq-compression",
                                    "summary": "Product quantization (PQ) is a form of data compression for vectors. PQ reduces the memory footprint of a vector index, so enabling PQ for HNSW lets you work with larger datasets. Starting in v1.23, AutoPQ simplifies configuring PQ on new collections.",
                                    "url": "https://weaviate.io/developers/weaviate/configuration/pq-compression"
                                },
                                {
                                    "name": "replication",
                                    "summary": "Replication is disabled by default and can be enabled per data class in the collection configuration. Weaviate instances can be replicated to increase availability and read throughput, and to enable zero-downtime upgrades. To enable replication on a class, the replication factor has to be set, which looks like the following.",
                                    "url": "https://weaviate.io/developers/weaviate/configuration/replication"
                                }
                            ]
                        },
                        {
                            "name": "installation",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "aws-marketplace",
                                    "summary": "We use an AWS CloudFormation template for delivery. You can use AWS Marketplace to directly launch a Weaviate cluster. This will set up the following resources:If you prefer a video, you can watch the following walkthrough. This video is recorded in September 2023, some details may have changed since.",
                                    "url": "https://weaviate.io/developers/weaviate/installation/aws-marketplace"
                                },
                                {
                                    "name": "docker-compose",
                                    "summary": "The default docker image doesn't need any configuration. To customize your instance, edit the configuration settings in the docker-compose.yml file. Use the Configurator to select specific Weaviate modules, including vectorizers that run locally. You can use environment variables to control your Weaviates setup, authentication and authorization.",
                                    "url": "https://weaviate.io/developers/weaviate/installation/docker-compose"
                                },
                                {
                                    "name": "embedded",
                                    "summary": "Embedded Weaviate is a new deployment model that runs a Weaviates instance from your application code. It creates a permanent datastore in the location set in your persistence_data_path. The next time the client runs, it starts a new instance of Embedded weaviate.",
                                    "url": "https://weaviate.io/developers/weaviate/installation/embedded"
                                },
                                {
                                    "name": "gc-marketplace",
                                    "summary": "You can use Google Cloud Marketplace to directly launch a Weaviate cluster. You can interact with the cluster using kubectl, or through the Weaviates API. We show examples below. The steps are as follows: configure the cluster, then deploy the application.",
                                    "url": "https://weaviate.io/developers/weaviate/installation/gc-marketplace"
                                },
                                {
                                    "name": "kubernetes",
                                    "summary": "The default values in values.yaml may be sufficient. Make sure to set your desired Weaviate version. The yaml file is extensively documented to help you align the configuration with your setup. The configuration file is setup for:See the resource requ requeur for more information.",
                                    "url": "https://weaviate.io/developers/weaviate/installation/kubernetes"
                                },
                                {
                                    "name": "spcs-integration",
                                    "summary": "Snowpark Container Services (SPCS) runs containers inside the Snowflake ecosystem. To configure a Weaviate instance that runs in SPCS, follow the steps on this page. The code in this guide configures a sample SpcS instance. The sample instance demonstrates how to run Weaviates in Snowpark.",
                                    "url": "https://weaviate.io/developers/weaviate/installation/spcs-integration"
                                },
                                {
                                    "name": "weaviate-cloud-services",
                                    "summary": "Weaviate Cloud (WCD) is a fully managed vector database in the cloud. Use WCD to simplify development and confidently deploy enterprise-ready AI applications. WCD is built on Weaviate core. They share the same technology, and offer the same great features.",
                                    "url": "https://weaviate.io/developers/weaviate/installation/weaviate-cloud-services"
                                }
                            ]
                        },
                        {
                            "name": "introduction",
                            "summary": "The Weaviate Cloud (WCD) documentation now has its own section! Check it out here. The content is grouped into categories by goals:Commonly requested resources such as have their own sections, and others can be found in the More Resources section. If you have questions, visit our forum - we can help you with your specific problem, and help make the documentation better.",
                            "url": "https://weaviate.io/developers/weaviate/introduction"
                        },
                        {
                            "name": "manage-data",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "collections",
                                    "summary": "Weaviate follows GraphQL naming conventions. Every object in Weaviate belongs to exactly one collection. Use the examples on this page to manage your collections. Use properties to configure additional parameters such as data type, index characteristics, or tokenization. For details, see:",
                                    "url": "https://weaviate.io/developers/weaviate/manage-data/collections"
                                },
                                {
                                    "name": "create",
                                    "summary": "The examples on this page demonstrate how to create individual objects in Weaviate. To create an object, specify the following:By default, auto-schema creates new collections and adds new properties. The same value always generates the same ID. Use deterministic IDs to avoid inserting duplicate objects.",
                                    "url": "https://weaviate.io/developers/weaviate/manage-data/create"
                                },
                                {
                                    "name": "cross-references",
                                    "summary": "It is also possible to add a cross-reference property to an existing collection definition. This requires adding reference properties in both directions, and adding two cross-references per object pair. Use cross- references to establish directional relationships between collections. Use the reference property in the collection definition before adding cross-References to it.",
                                    "url": "https://weaviate.io/developers/weaviate/manage-data/cross-references"
                                },
                                {
                                    "name": "delete",
                                    "summary": "Weaviate allows object deletion by id or by a set of criteria. To delete objects, you must provide the collection name as well as identifying criteria (e.g. object id or filters) For multi-tenancy collections, you will also need to specify the tenant name when deleting objects.",
                                    "url": "https://weaviate.io/developers/weaviate/manage-data/delete"
                                },
                                {
                                    "name": "import",
                                    "summary": "Batch imports are an efficient way to add multiple data objects and cross-references. The Python clients have built-in batching methods to help you optimize import speed. If your dataset is large, consider streaming the import to avoid out-of-memory issues.",
                                    "url": "https://weaviate.io/developers/weaviate/manage-data/import"
                                },
                                {
                                    "name": "migrate",
                                    "summary": "Follow these examples to migrate data manually when using a backup is not possible. The examples use two different Weaviate instances, exposed through different ports. The same process can be used for two different instances as well. These scripts should migrate cross-references as well as cursor-based exports.",
                                    "url": "https://weaviate.io/developers/weaviate/manage-data/migrate"
                                },
                                {
                                    "name": "multi-tenancy",
                                    "summary": "Multi-tenancy provides data isolation. Each tenant is stored on a separate shard. Data stored in one tenant is not visible to another tenant. Weaviate returns an error if you try to insert an object into a non-existent tenant. The auto-tenant feature is available from v1.25.0 for batch imports.",
                                    "url": "https://weaviate.io/developers/weaviate/manage-data/multi-tenancy"
                                },
                                {
                                    "name": "read",
                                    "summary": "Use an ID to retrieve an object. If the id doesn't exist, Weaviate returns a 404 error. When multi-tenant datasets are enabled, the tenant name is required. If an object with a given id exists without retrieving it, make a HEAD request to the /v1/objects/ REST endpoint.",
                                    "url": "https://weaviate.io/developers/weaviate/manage-data/read"
                                },
                                {
                                    "name": "read-all-objects",
                                    "summary": "Weaviate provides the necessary APIs to iterate through all your data. This is useful when you want to manually copy/migrate your data (and vector embeddings) from one place to another. The new API clients (currently supported by the Python Client v4), encapsulate this functionality as an Iterator.",
                                    "url": "https://weaviate.io/developers/weaviate/manage-data/read-all-objects"
                                },
                                {
                                    "name": "update",
                                    "summary": "Weaviate allows partial or complete object updates. To update objects, you must provide the collection name, id and properties. For multi-tenancy collections, you will also need to specify the tenant name. Weaviate v2.0.0 is now available.",
                                    "url": "https://weaviate.io/developers/weaviate/manage-data/update"
                                }
                            ]
                        },
                        {
                            "name": "model-providers",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "generative",
                                    "summary": "Weaviate's integration with Anyscale's Endpoints allows you to access their models' capabilities directly from Weaviate. The model provider integration pages are new and still undergoing improvements. We would like to hear from you about your experiences with this integration. Please post your feedback in the comments section below.",
                                    "url": "https://weaviate.io/developers/weaviate/model-providers/anyscale/generative"
                                },
                                {
                                    "name": "aws",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "embeddings",
                                            "summary": "Weaviate's integration with AWS's SageMaker and Bedrock APIs allows you to access their models' capabilities directly from Weaviate. The model provider integration pages are new and still undergoing improvements. The integration is enabled by default on Weaviates Cloud (WCD) serverless instances.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/aws/embeddings"
                                        },
                                        {
                                            "name": "generative",
                                            "summary": "Weaviate is a cloud-based service that lets users create, edit, and share content. Weaviate uses the AWS SageMaker and Bedrock APIs to create and edit content. You must provide access key based AWS credentials to use this service. We are open to feedback from users on how we can improve.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/aws/generative"
                                        }
                                    ]
                                },
                                {
                                    "name": "cohere",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "embeddings",
                                            "summary": "Weaviate allows you to use the Cohere API to create and edit embeddings. You must provide a valid API key to use this feature. For more information, visit Weaviate's API page. For help with this feature, please visit the Weaviates API page: http://www.weaviate.com/.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/cohere/embeddings"
                                        },
                                        {
                                            "name": "generative",
                                            "summary": "Weaviate Cloud (WCD) serverless instances must be configured with the Cohere generative AI integration (generative-cohere) module. You must provide a valid Cohere API key to Weaviate for this integration. The model provider integration pages are new and still undergoing improvements.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/cohere/generative"
                                        },
                                        {
                                            "name": "reranker",
                                            "summary": "Weaviate's integration with Cohere's APIs allows you to access their models' capabilities directly from Weaviate. The model provider integration pages are new and still undergoing improvements. The integration is enabled by default on Weaviated Cloud (WCD) serverless instances. You must provide a valid Cohere API key to Weaviates for this integration.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/cohere/reranker"
                                        }
                                    ]
                                },
                                {
                                    "name": "google",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "embeddings",
                                            "summary": "Weaviate's integration with Google AI Studio and Google Vertex AI APIs allows you to access their models' capabilities directly from Weaviate. At the time of writing (November 2023), AI Studio is not available in all regions. The model provider integration pages are new and still undergoing improvements.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/google/embeddings"
                                        },
                                        {
                                            "name": "embeddings-multimodal",
                                            "summary": "Weaviate's integration with Google Vertex AI APIs allows you to access their models' capabilities directly from Weaviate. The model provider integration pages are new and still undergoing improvements. The integration is enabled by default on Weaviates Cloud (WCD) serverless instances.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/google/embeddings-multimodal"
                                        },
                                        {
                                            "name": "generative",
                                            "summary": "Weaviate integration with Google AI Studio and Google Vertex AI. Weaviate will perform a search, retrieve the most relevant objects, and then pass them to the Google AI generative model to generate outputs. This integration is enabled by default on Weaviates Cloud (WCD) serverless instances.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/google/generative"
                                        }
                                    ]
                                },
                                {
                                    "name": "embeddings",
                                    "summary": "Weaviate's integration with GPT4All's models allows you to access their models' capabilities directly from Weaviate. The integration is only available for amd64/x86_64 architecture devices, as the gpt4all library currently does not support ARM devices, such as Apple M-series.",
                                    "url": "https://weaviate.io/developers/weaviate/model-providers/gpt4all/embeddings"
                                },
                                {
                                    "name": "embeddings",
                                    "summary": "Weaviate's integration with Hugging Face's APIs allows you to access their models' capabilities directly from Weaviate. The model provider integration pages are new and still undergoing improvements. The integration is enabled by default on Weaviates Cloud (WCD) serverless instances. Go to Hugging face to sign up and obtain an API key.",
                                    "url": "https://weaviate.io/developers/weaviate/model-providers/huggingface/embeddings"
                                },
                                {
                                    "name": "embeddings-multimodal",
                                    "summary": "Weaviate's integration with the Meta ImageBind library allows you to access its capabilities directly from Weaviate. The ImageBind model supports multiple modalities (text, image, audio, video, thermal, IMU and depth)Configure a Weaviates vector index to use the ImageBind integration.",
                                    "url": "https://weaviate.io/developers/weaviate/model-providers/imagebind/embeddings-multimodal"
                                },
                                {
                                    "name": "embeddings",
                                    "summary": "Weaviate's integration with Jina AI's APIs allows you to access their models' capabilities directly from Weaviate. The model provider integration pages are new and still undergoing improvements. The integration is enabled by default on Weaviates Cloud (WCD) serverless instances.",
                                    "url": "https://weaviate.io/developers/weaviate/model-providers/jinaai/embeddings"
                                },
                                {
                                    "name": "generative",
                                    "summary": "Weaviate's integration with Mistral's APIs allows you to access their models' capabilities directly from Weaviate. The integration is enabled by default on Weaviates Cloud (WCD) serverless instances. You must provide a valid Mistral API key to Weaviated for this integration.",
                                    "url": "https://weaviate.io/developers/weaviate/model-providers/mistral/generative"
                                },
                                {
                                    "name": "octoai",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "embeddings",
                                            "summary": "Weaviate's integration with OctoAI's APIs allows you to access their models' capabilities directly from Weaviate. The model provider integration pages are new and still undergoing improvements. The integration is enabled by default on Weaviates Cloud (WCD) serverless instances.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/octoai/embeddings"
                                        },
                                        {
                                            "name": "generative",
                                            "summary": "You must provide a valid OctoAI API key to use this service. The API key can be used to create, edit, and delete content. You can also use the API to make changes to the content of the service. For more information, visit www.octoai.com.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/octoai/generative"
                                        }
                                    ]
                                },
                                {
                                    "name": "ollama",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "embeddings",
                                            "summary": "Weaviate's integration with Ollama's models allows you to access their models' capabilities directly from Weaviate. This integration requires a locally running Ollamas instance with your selected model available. The model provider integration pages are new and still undergoing improvements. We appreciate any feedback on this forum thread.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/ollama/embeddings"
                                        },
                                        {
                                            "name": "generative",
                                            "summary": "Weaviate's integration with Ollama's models allows you to access their models' capabilities directly from Weaviate. This integration requires a locally running Ollamas instance with your selected model available. The model provider integration pages are new and still undergoing improvements. We appreciate any feedback on this forum thread.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/ollama/generative"
                                        }
                                    ]
                                },
                                {
                                    "name": "openai",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "embeddings",
                                            "summary": "Weaviate is a cloud-based search engine. We use the OpenAI API to provide search results to users. We also use the API to create embeddings for our search results. For more information on how to use this feature, visit: http://www.weaviate.com.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/openai/embeddings"
                                        },
                                        {
                                            "name": "generative",
                                            "summary": "Weaviate's integration with OpenAI's APIs allows you to access their models' capabilities directly from Weaviate. The model provider integration pages are new and still undergoing improvements. The integration is enabled by default on Weaviated Cloud (WCD) serverless instances. You must provide a valid OpenAI API key to Weaviates for this integration.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/openai/generative"
                                        }
                                    ]
                                },
                                {
                                    "name": "openai-azure",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "embeddings",
                                            "summary": "Weaviate's integration with Azure OpenAI's APIs allows you to access their models' capabilities directly from Weaviate. The model provider integration pages are new and still undergoing improvements. The integration is enabled by default on Weaviates Cloud (WCD) serverless instances.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/openai-azure/embeddings"
                                        },
                                        {
                                            "name": "generative",
                                            "summary": "Weaviate's integration with Azure OpenAI's APIs allows you to access their models' capabilities directly from Weaviate. The integration is enabled by default on Weaviates Cloud (WCD) serverless instances. You must provide a valid Azure Open AI API key to Weaviated for this integration.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/openai-azure/generative"
                                        }
                                    ]
                                },
                                {
                                    "name": "transformers",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "embeddings",
                                            "summary": "Weaviate's integration with the Hugging Face Transformers library allows you to access their models' capabilities directly from Weaviate.Configure a Weaviates vector index to use the Transformers integration. The model provider integration pages are new and still undergoing improvements. We appreciate any feedback on this forum thread.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/transformers/embeddings"
                                        },
                                        {
                                            "name": "embeddings-custom-image",
                                            "summary": "Weaviate's integration with the Hugging Face Transformers library allows you to access their models' capabilities directly from Weaviate. This page shows how to build a custom Transformers model image and configure Weaviates with it. Once a custom image is built, usage patterns are identical to the pre-built images.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/transformers/embeddings-custom-image"
                                        },
                                        {
                                            "name": "embeddings-multimodal",
                                            "summary": "Weaviate's integration with the Hugging Face Transformers library allows you to access their CLIP models' capabilities directly from Weaviate.Configure a Weaviates vector index to use the CLIP integration. The model provider integration pages are new and still undergoing improvements.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/transformers/embeddings-multimodal"
                                        },
                                        {
                                            "name": "embeddings-multimodal-custom-image",
                                            "summary": "Weaviate's integration with the Hugging Face Transformers library allows you to access their CLIP models' capabilities directly from Weaviate.Configure a Weaviates vector index to use the CLIP integration. You can build a custom CLIP model image to use with Weaviated.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/transformers/embeddings-multimodal-custom-image"
                                        }
                                    ]
                                },
                                {
                                    "name": "voyageai",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "embeddings",
                                            "summary": "Weaviate's integration with Voyage AI's APIs allows you to access their models' capabilities directly from Weaviate. The model provider integration pages are new and still undergoing improvements. The integration is enabled by default on Weaviates Cloud (WCD) serverless instances.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/voyageai/embeddings"
                                        },
                                        {
                                            "name": "reranker",
                                            "summary": "Weaviate's integration with Voyage AI's APIs allows you to access their models' capabilities directly from Weaviate. The integration is enabled by default on Weaviates Cloud (WCD) serverless instances. The model provider integration pages are new and still undergoing improvements. We appreciate any feedback on this forum thread.",
                                            "url": "https://weaviate.io/developers/weaviate/model-providers/voyageai/reranker"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "modules",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "other-modules",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "custom-modules",
                                            "summary": "This page contains information about how you can attach your own ML model to Weaviate. A custom vectorizer module is, for example, a model that is able to transform data (e.g. text or image data) to embeddings. This way, you can use Weaviates to scale your ML and NLP models.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/other-modules/custom-modules"
                                        },
                                        {
                                            "name": "spellcheck",
                                            "summary": "The Spell Check module is a Weaviate module for checking spelling in raw texts in GraphQL query inputs. Using the Python spellchecker library, the module analyzes text, gives a suggestion and can force an autocorrection. The module can be added as a service to the Docker Compose file.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/other-modules/spellcheck"
                                        }
                                    ]
                                },
                                {
                                    "name": "reader-generator-modules",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "generative-anyscale",
                                            "summary": "Generative Anyscale is a module for Weaviate Cloud. It performs retrieval augmented generation, or RAG, based on the data stored in your instance. To use generative-anyscale, you must enable it in your Docker Compose file ( docker-compose.yml)",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/generative-anyscale"
                                        },
                                        {
                                            "name": "generative-aws",
                                            "summary": "Generative-aws performs retrieval augmented generation, or RAG, based on the data stored in your Weaviate instance. You must provide access key based AWS credentials to use the API. You need to input both a query and a prompt (for individual responses) or a task (for all responses)",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/generative-aws"
                                        },
                                        {
                                            "name": "generative-cohere",
                                            "summary": "Generative-cohere performs retrieval augmented generation, or RAG, based on the data stored in your Weaviate instance. You can use the Generative Cohere module with non-Cohere upstream modules. You need to input both a query and a prompt (for individual responses) or a task (for all responses)",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/generative-cohere"
                                        },
                                        {
                                            "name": "generative-mistral",
                                            "summary": "Generative Mistral is a module for Weaviate Cloud. It performs retrieval augmented generation, or RAG, based on the data stored in your Weaviates instance. To use generative-mistral, you must enable it in your Docker Compose file ( docker-compose.yml)",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/generative-mistral"
                                        },
                                        {
                                            "name": "generative-ollama",
                                            "summary": "Generative Ollama is a module for Weaviate. It performs retrieval augmented generation, or RAG, based on the data stored in your Weaviates instance. To use generative-ollama, you must enable it in your Docker Compose file ( docker-compose.yml)",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/generative-ollama"
                                        },
                                        {
                                            "name": "generative-openai",
                                            "summary": "Generative-openai performs retrieval augmented generation, or RAG, based on the data stored in your Weaviate instance. The module works in two steps: You can use the Generative OpenAI module with non-OpenAI upstream modules. You need to input both a query and a prompt.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/generative-openai"
                                        },
                                        {
                                            "name": "generative-palm",
                                            "summary": "The module can be used with either Google Cloud Vertex AI or AI Studio. The configurations vary slightly for each. AI Studio (previously called MakerSuite) support was added in version 1.22.4. The API key for VertexAI users is called an access token in Google Cloud.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/generative-palm"
                                        },
                                        {
                                            "name": "ner-transformers",
                                            "summary": "The NER module can be added as a service to the Docker Compose file. You must have a text vectorizer like text2vec-contextionary or text2 Vec-transformers running. For maximum performance, transformer-based models should run with GPUs. There are three different NER modules available.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/ner-transformers"
                                        },
                                        {
                                            "name": "qna-openai",
                                            "summary": "For new projects, we recommend using the generative-openai module. This uses older models such as gpt-3.5-turbo-instruct. The Question and Answer (Q&A) OpenAI module is a Weaviate module for answer extraction from data. This module can be used in GraphQL Get{...} queries.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/qna-openai"
                                        },
                                        {
                                            "name": "qna-transformers",
                                            "summary": "The Question and Answer (Q&A) module is a Weaviate module for answer extraction from data. It uses BERT-related models for finding and extracting answers. The qna-transformers module tries to find an answer in the data objects of the specified class. There are currently five different Question Answering models available.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/qna-transformers"
                                        },
                                        {
                                            "name": "sum-transformers",
                                            "summary": "The sum-transformers module can be added as a service to the Docker Compose file. As the name indicates, the summarization module can produce a summary of Weaviate text objects at query time. For maximum performance of your queries, transformer-based models should run with GPUs.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/reader-generator-modules/sum-transformers"
                                        }
                                    ]
                                },
                                {
                                    "name": "retriever-vectorizer-modules",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "img2vec-neural",
                                            "summary": "The img2vec-neural module enables Weaviate to obtain vectors locally using a resnet50 model. It encapsulates the model in a Docker container, which allows independent scaling on GPU-enabled hardware. For new projects, we recommend using the multi2vec -clip module instead. This uses CLIP models, which uses a more modern model architecture.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/img2vec-neural"
                                        },
                                        {
                                            "name": "multi2vec-bind",
                                            "summary": "The multi2vec-bind module enables Weaviate to use the ImageBind model to vectorize data at import time. To use the module, you must enable it in your Docker Compose file (e.g. docker-compose.yml) The module requires a significant amount of memory to run.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/multi2vec-bind"
                                        },
                                        {
                                            "name": "multi2vec-clip",
                                            "summary": "The multi2vec-clip module enables Weaviate to obtain vectors locally from text or images using a CLIP model. It encapsulates the model in a Docker container, which allows independent scaling on GPU-enabled hardware. As of Weaviates v1.24.2, you can use multiple inference containers.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/multi2vec-clip"
                                        },
                                        {
                                            "name": "multi2vec-palm",
                                            "summary": "The multi2vec-palm module uses a Google multimodal embedding model to create vectors from text or images. This module enables the nearText and nearImage search operators. The module is only compatible with Google Vertex AI. It is not supported in Google AI Studio.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/multi2vec-palm"
                                        },
                                        {
                                            "name": "ref2vec-centroid",
                                            "summary": "The ref2Vec-centroid module is used to calculate object vectors based on the centroid of referenced vectors. The idea is that this centroid vector would be calculated from the vectors of an object's references, enabling associations between clusters of objects. This is useful in applications such as making suggestionsbased on the aggregation of a user's actions or preferences.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/ref2vec-centroid"
                                        },
                                        {
                                            "name": "reranker-cohere",
                                            "summary": "Add reranker-cohere to the ENABLE_MODULES environment variable. This module is enabled by default in WCD. You can also specify options such as the model to use. This example configures the Document collection to use the rerank-multilingual-v3.0 model.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/reranker-cohere"
                                        },
                                        {
                                            "name": "reranker-transformers",
                                            "summary": "The reranker-transformers module enables using sentence transformers models as a second stage re-ranking for vector, bm25 and hybrid search results. It can be configured for any collection in the Schema. The re Rankers module is not available on the WCD.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/reranker-transformers"
                                        },
                                        {
                                            "name": "reranker-voyageai",
                                            "summary": "Add reranker-voyageai to the ENABLE_MODULES environment variable. This module is enabled by default in WCD. You can also specify options such as the model to use. This example configures the Document collection to use the re Rank-lite-1 model.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/reranker-voyageai"
                                        },
                                        {
                                            "name": "text2vec-aws",
                                            "summary": "The text2vec-aws module allows Weaviate to access AWS Bedrock and AWS Sagemaker services. The module accepts parameters through the request header, collection configuration, or environment variables. To use the module, enable it in your Docker Compose file ( docker-compose.yml)",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-aws"
                                        },
                                        {
                                            "name": "text2vec-cohere",
                                            "summary": "The text2vec-cohere module enables Weaviate to obtain vectors using Cohere. The module accepts parameters through the request header, collection configuration, or environment variables. Some parameters (such as the API key) can be set in multiple ways. We suggest you only set any given parameter in one place to avoid confusion.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-cohere"
                                        },
                                        {
                                            "name": "text2vec-contextionary",
                                            "summary": "The text2vec-contextionary module enables Weaviate to obtain vectors locally using a lightweight model. To use this module, you must enable it in your Docker Compose file. For production use cases, we recommend using other modules that use a more modern, transformer-based architecture.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-contextionary"
                                        },
                                        {
                                            "name": "text2vec-gpt4all",
                                            "summary": "The text2vec-gpt4all module is not available on Weaviate Cloud. To use it, you must enable it in your Docker Compose file ( docker-compose.yml) You can set vectorizer behavior using the moduleConfig section under each class and property.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-gpt4all"
                                        },
                                        {
                                            "name": "text2vec-huggingface",
                                            "summary": "The text2vec-huggingface module enables Weaviate to obtain vectors using the Hugging Face Inference API. To use the module, you must enable it in your Docker Compose file ( docker-compose.yml) You can set vectorizer behavior using the moduleConfig section under each clas.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-huggingface"
                                        },
                                        {
                                            "name": "text2vec-jinaai",
                                            "summary": "The text2vec-jinaai module enables Weaviate to obtain vectors using JinaAI Embeddings. To use the module, you must enable it in your Docker Compose file ( docker-compose.yml) You can supply the API key at query time by adding it to the HTTP header.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-jinaai"
                                        },
                                        {
                                            "name": "text2vec-ollama",
                                            "summary": "The text2vec-ollama module enables Weaviate to obtain vectors using Ollama. Ollamas is a tool for simplifying the process of running embedding and large language models, such as GPT-3, on your own hardware. This module is not available on Weaviates Cloud.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-ollama"
                                        },
                                        {
                                            "name": "text2vec-openai",
                                            "summary": "The text2vec-openai module enables Weaviate to obtain vectors using OpenAI or Azure OpenAI. The module accepts parameters through the request header, collection configuration, or environment variables. Some parameters (such as the API key) can be set in multiple ways. We suggest you only set any given parameter in one place to avoid confusion.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-openai"
                                        },
                                        {
                                            "name": "text2vec-palm",
                                            "summary": "The text2vec-palm module enables Weaviate to obtain vectors using a Google API. You can use this with Google Cloud Vertex AI, or with Google AI Studio. The configurations vary slightly for each. As of the time of writing (September 2023), you must manually enable the VertexAI API on your Google Cloud project.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-palm"
                                        },
                                        {
                                            "name": "text2vec-transformers",
                                            "summary": "The text2vec-transformers module enables Weaviate to obtain vectors locally from text using a transformers-based model. It encapsulates models in Docker containers, which allows independent scaling on GPU-enabled hardware. The ONNX-enabled images can use ONNx Runtime for faster inference processing on CPUs.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-transformers"
                                        },
                                        {
                                            "name": "text2vec-voyageai",
                                            "summary": "The text2vec-voyageai module enables Weaviate to obtain vectors using Voyage AI. To use it, you must enable it in your Docker Compose file ( docker-compose.yml) The module accepts parameters through the request header, collection configuration, or environment variables.",
                                            "url": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-voyageai"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "more-resources",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "dspy",
                                    "summary": "DSPy is a framework for programming language models created by Stanford NLP. Weaviate is integrated with DSPy through the retriever module. You only need to connect to your Weaviated cluster through WCD or localhost, and pass in your collection.",
                                    "url": "https://weaviate.io/developers/weaviate/more-resources/dspy"
                                },
                                {
                                    "name": "example-datasets",
                                    "summary": "We have imported the complete Wikidata PBG model into a Weaviate to search through the entire dataset. The demo GraphQL queries contain both pure vector search and scalar and vector searched mixed queries. We have made the import scripts, pre-processed articles, and backup available so that you can run the complete setup.",
                                    "url": "https://weaviate.io/developers/weaviate/more-resources/example-datasets"
                                },
                                {
                                    "name": "example-use-cases",
                                    "summary": "This page illustrates various use cases for vector databases by way of open-source demo projects. If you would like to contribute your own project to this page, create an issue on GitHub. A vector databases enables fast, efficient similarity searches on and across any modalities, such as text or images, as well as their combinations.",
                                    "url": "https://weaviate.io/developers/weaviate/more-resources/example-use-cases"
                                },
                                {
                                    "name": "faq",
                                    "summary": "Weaviate is a search engine that uses inverted indices to store data and values. Data is stored as vectors, which enables semantic search. This combination of data storage is unique, and enables fast, filtered and semantic search from end-to-end. Weaviate comes containerized to make it easier for others to build their own systems.",
                                    "url": "https://weaviate.io/developers/weaviate/more-resources/faq"
                                },
                                {
                                    "name": "glossary",
                                    "summary": ". If you have any questions or feedback, let us know in the user forum. Back to Mail Online home. back to the page you came from.  Back to the site you came From.  The Daily Mail home. Back To the Daily Mail Home.",
                                    "url": "https://weaviate.io/developers/weaviate/more-resources/glossary"
                                },
                                {
                                    "name": "weaviate-1-25",
                                    "summary": "Weaviate 1.25 introduces RAFT as the consensus algorithm for its database. This change requires a migration of the entire schema. The cluster requires some downtime for the migration. The length of the downtime depends on the size of the database. We suggest performing this upgrade at a least disruptive time.",
                                    "url": "https://weaviate.io/developers/weaviate/more-resources/migration/weaviate-1-25"
                                },
                                {
                                    "name": "performance",
                                    "summary": "Inverted indices are used often in document retrieval systems and search engines. They allow fast full-text search and fast key-based search instead of brute-force. This fast data retrieval comes with the only cost of slight increase of processing time when a new data object is added, since the data object will indexed and stored in an inverted way.",
                                    "url": "https://weaviate.io/developers/weaviate/more-resources/performance"
                                },
                                {
                                    "name": "write-great-bug-reports",
                                    "summary": "This page outlines what an ideal bug report would look like. We don't want to discourage you from reporting a bug just because you might not be able to provide all the info needed to make the report great. If a bug report is well-prepared, it has a greater chance of being picked up first.",
                                    "url": "https://weaviate.io/developers/weaviate/more-resources/write-great-bug-reports"
                                }
                            ]
                        },
                        {
                            "name": "quickstart",
                            "summary": "This tutorial demonstrates having Weaviate create vectors with a vectorizer. For a tutorial on using custom vectors, see this tutorial. We will use a (tiny) dataset of quizzes. The data comes from a TV quiz show (\"Jeopardy!\")Try it directly on Google Colab (or go to the file).",
                            "url": "https://weaviate.io/developers/weaviate/quickstart"
                        },
                        {
                            "name": "release-notes",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "older-releases",
                                    "summary": "pass",
                                    "url": "parent_url",
                                    "children": [
                                        {
                                            "name": "release_1_16",
                                            "summary": "Weaviate 1.16 brings a set of great features, performance and UX improvements, and fixes. The ability to seamlessly combine an inverted index with a vector index is part of what makes Weaviate so powerful. The possibility to query the null state has been added.",
                                            "url": "https://weaviate.io/developers/weaviate/release-notes/older-releases/release_1_16"
                                        },
                                        {
                                            "name": "release_1_17",
                                            "summary": "Weaviate's v1.17 release introduces replication. Replication enables you to set up your Weaviate environment in a cluster with multiple server nodes. Adding extra database nodes can serve more users simultaneously. Database replication enables zero downtime upgrades, because of no downtime upgrades.",
                                            "url": "https://weaviate.io/developers/weaviate/release-notes/older-releases/release_1_17"
                                        },
                                        {
                                            "name": "release_1_18",
                                            "summary": "Weaviate 1.18 brings a set of great features, performance improvements, and fixes. This release introduces a compact, modern data structure to Weaviate called \u201cRoaring bitmaps\u201d The new Roaring bitmap indexing dramatically speeds up filtered searches. It provides up to 1000(!) times faster performance in some cases.",
                                            "url": "https://weaviate.io/developers/weaviate/release-notes/older-releases/release_1_18"
                                        },
                                        {
                                            "name": "release_1_19",
                                            "summary": "Weaviate 1.19 brings a set of great features, performance improvements, and fixes. A downgrade to v1.18 will no longer be supported. You can now group Get search results based on a specific property. The groups and objectsPerGroup limits are custom.",
                                            "url": "https://weaviate.io/developers/weaviate/release-notes/older-releases/release_1_19"
                                        }
                                    ]
                                },
                                {
                                    "name": "release_1_20",
                                    "summary": "Weaviate 1.20 is a new release of Weaviate. This release includes a number of new features. The most important new feature is the ability to store data from up to millions of tenants in a single setup. This means that scaling your business or infrastructure to include data from a large group of users is easier and faster than ever.",
                                    "url": "https://weaviate.io/developers/weaviate/release-notes/release_1_20"
                                },
                                {
                                    "name": "release_1_21",
                                    "summary": "1.21 adds ContainsAny and ContainsAll operators to make your filters sweeter than ever. You can use these to reduce complex chains of And or Or where filters to simple, digestible, queries that are easier on your eye and your brain. This is one of our most-requested features, and we are very excited for you to try it out.",
                                    "url": "https://weaviate.io/developers/weaviate/release-notes/release_1_21"
                                },
                                {
                                    "name": "release_1_22",
                                    "summary": "Weaviate 1.22 is already available on Weaviate Cloud - so try it out! Nested properties let you work with an address value that has number, street, and city` properties of its own. Object and object[] join the available list of data types.",
                                    "url": "https://weaviate.io/developers/weaviate/release-notes/release_1_22"
                                },
                                {
                                    "name": "release_1_23",
                                    "summary": "Weaviate 1.23 is already available on Weaviate Cloud - so try it out! This release includes improvements to Product Quantization (PQ) PQ requires a training step, so we created AutoPQ to take care of the training for you. In this release we have a new algorithm to determine the optimal segment size.",
                                    "url": "https://weaviate.io/developers/weaviate/release-notes/release_1_23"
                                },
                                {
                                    "name": "release_1_24",
                                    "summary": "Weaviate 1.24 is here! Here are the release highlights. Named vectors make your collections richer and more versatile. You can group things that are logically related, like a music video and a lyric sheet, in the same object. You don't have to create cross-references or manage shared metadata.",
                                    "url": "https://weaviate.io/developers/weaviate/release-notes/release_1_24"
                                },
                                {
                                    "name": "release_1_25",
                                    "summary": "In 1.25 we\u2019re introducing the dynamic vector index. This will initially create a flat index to be used and once the number of objects exceeds a certain threshold (by default 10,000 objects) it will dynamically switch you over to an HNSW index. Here is how you can configure Weaviate to use a dynamic index.",
                                    "url": "https://weaviate.io/developers/weaviate/release-notes/release_1_25"
                                }
                            ]
                        },
                        {
                            "name": "roadmap",
                            "summary": "Weaviate is an open source project that is hosted on GitHub. GitHub uses issues to request features and to track projects. Weaviate uses your feedback to plan future releases. If an issue is important to you, upvote it to let us know. Alternatively, join our forum to discuss the roadmap in more detail.",
                            "url": "https://weaviate.io/developers/weaviate/roadmap"
                        },
                        {
                            "name": "search",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "aggregate",
                                    "summary": "Aggregate queries process the result set to return calculated results. Use aggregate queries for groups of objects or the entire result set. To run an Aggregate query, specify the following:A target collection to search. One or more aggregated properties, such as:Select at least one sub-property for each selected property.",
                                    "url": "https://weaviate.io/developers/weaviate/search/aggregate"
                                },
                                {
                                    "name": "basics",
                                    "summary": "With Weaviate you can query your data using vector similarity search, keyword search, or a mix of both with hybrid search. You can control what object properties and metadata to return. This page provides fundamental search syntax to get you started.You can get objects without specifying any parameters. This returns objects ordered by their UUID.",
                                    "url": "https://weaviate.io/developers/weaviate/search/basics"
                                },
                                {
                                    "name": "bm25",
                                    "summary": "BM25 (Best match 25) search returns objects that have the highest BM25F scores. To use BM25 keyword search, define a search string. The BM25 query string is tokenized before it is used to search for objects using the inverted index. Use offset to paginate the results.",
                                    "url": "https://weaviate.io/developers/weaviate/search/bm25"
                                },
                                {
                                    "name": "filters",
                                    "summary": "Filters let you include, or exclude, particular objects from your result set based on provided conditions. Add a filter to your query, to limit the result set. To filter with two or more conditions, use And or Or to define the relationship between the conditions. To create a nested filter, follow these steps.",
                                    "url": "https://weaviate.io/developers/weaviate/search/filters"
                                },
                                {
                                    "name": "generative",
                                    "summary": "Generative search is a multi-stage process. First Weaviate performs a query, then it passes the retrieved results and a prompt to a large language model (LLM), to generate a new output.Configure the target collection to use the generator module. Define object properties to interpolate retrieved content in the prompt.",
                                    "url": "https://weaviate.io/developers/weaviate/search/generative"
                                },
                                {
                                    "name": "hybrid",
                                    "summary": "Hybrid search combines the results of a vector search and a keyword (BM25F) search. Weaviate uses a ranking method to merge the search results. To run a hybrid search on a collection that has named vectors, use the target vector field to specify which named vector to search.",
                                    "url": "https://weaviate.io/developers/weaviate/search/hybrid"
                                },
                                {
                                    "name": "image",
                                    "summary": "Image search uses an image as a search input to perform vector similarity search.Configure an image vectorizer module for your collection to use images as search inputs. Use the Near Image operator to execute image search. Vote for the feature request. DYI code below.",
                                    "url": "https://weaviate.io/developers/weaviate/search/image"
                                },
                                {
                                    "name": "rerank",
                                    "summary": "Configure reranking. To rerank search results, enable a reranker module for your collection. Reranking modules reorder the search result set according to a different set of criteria or a different (e.g. more expensive) algorithm. If multiple rerankers are enabled, specify the module you want to use in the moduleConfig section.",
                                    "url": "https://weaviate.io/developers/weaviate/search/rerank"
                                },
                                {
                                    "name": "similarity",
                                    "summary": " Vector search returns the objects with most similar vectors to that of the query. To search a collection that has named vectors, use the target vector field to specify which named vector to search. To set a similarity threshold between the search and target vectors, define a maximum distance (or certainty)",
                                    "url": "https://weaviate.io/developers/weaviate/search/similarity"
                                }
                            ]
                        },
                        {
                            "name": "starter-guides",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "connect",
                                    "summary": "Configure your connection to provide authentication parameters and API keys for Weaviate and third-party services. Connect with services like Cohere, Hugging Face, and OpenAI to use their models with your data. To configure a connection, you need the following information:Weaviate Cloud (WCD), the dashboard has a \"Details\" button.",
                                    "url": "https://weaviate.io/developers/weaviate/starter-guides/connect"
                                },
                                {
                                    "name": "custom-vectors",
                                    "summary": "Weaviate is a vector database. Vector databases store data objects and vectors that represent those objects. The vector representation is also called an \"embedding\" When you import data, you can pass pre-existing vectors or generate new ones. \"Bring your own vectors\" means you supply the vector embeddings when you upload your data.",
                                    "url": "https://weaviate.io/developers/weaviate/starter-guides/custom-vectors"
                                },
                                {
                                    "name": "generative",
                                    "summary": "Generative search is a powerful technique that retrieves relevant data to provide to large language models (LLMs) as context. It is also called retrieval augmented generation (RAG), or in-context learning in some cases. This pages introduces you to generative search with Weaviate.",
                                    "url": "https://weaviate.io/developers/weaviate/starter-guides/generative"
                                },
                                {
                                    "name": "schema",
                                    "summary": "The database schema defines how data is stored, organized and retrieved in Weaviate. A schema must be defined before data can be imported. This tutorial will guide you through the process of defining a schema for your data, including commonly used settings and key considerations. Let's begin with a simple example before diving into the details.",
                                    "url": "https://weaviate.io/developers/weaviate/starter-guides/schema"
                                },
                                {
                                    "name": "which-weaviate",
                                    "summary": "Weaviate can be deployed in the following ways:When adding data objects to Weaviate, you have two choices: If you are using a vectorizer module, your choices will depend on your input medium/modality, as well as whether you would prefer a local or API-based vectorizer. Remember, domain-specific and real-world performance may vary.",
                                    "url": "https://weaviate.io/developers/weaviate/starter-guides/which-weaviate"
                                }
                            ]
                        },
                        {
                            "name": "tutorials",
                            "summary": "pass",
                            "url": "parent_url",
                            "children": [
                                {
                                    "name": "cross-references",
                                    "summary": "In Weaviate, you can use cross-references to manage relationships between objects. For example, a blog application might need to store information about the author of each post. Or, a document store may chunk documents into smaller pieces and store them in separate objects, each with a reference to the original document.",
                                    "url": "https://weaviate.io/developers/weaviate/tutorials/cross-references"
                                },
                                {
                                    "name": "import",
                                    "summary": "In this section, we will explore data import, including details of the batch import process. We will discuss points such as how vectors are imported, what a batch import is, how to manage errors, and some advice on optimization. Before you start this tutorial, you should follow the steps in the tutorials to have:",
                                    "url": "https://weaviate.io/developers/weaviate/tutorials/import"
                                },
                                {
                                    "name": "modules",
                                    "summary": "Weaviate modules are options components to enhance Weaviate's functionality. The structure of the module name (x2vec) informs you of what the module does. For example, if you use the text2vec modules, the GraphQL filter nearText becomes available.",
                                    "url": "https://weaviate.io/developers/weaviate/tutorials/modules"
                                },
                                {
                                    "name": "query",
                                    "summary": "Weaviate's queries are built using GraphQL. We will take it step-by-step and build up from the basics. You can query Weaviate using one or a combination of a semantic (i.e. vector) search and a lexical (e.g. scalar) search.",
                                    "url": "https://weaviate.io/developers/weaviate/tutorials/query"
                                },
                                {
                                    "name": "spark-connector",
                                    "summary": "This tutorial shows you how to use the Spark Connector to import data into Weaviate from Spark. We will install the python weaviate-client and also run Spark locally. By the end of this tutorial, you'll be able to see how to you can import your data into Apache Spark.",
                                    "url": "https://weaviate.io/developers/weaviate/tutorials/spark-connector"
                                },
                                {
                                    "name": "vector-provision-options",
                                    "summary": "This 5-minute video provides an overview of all three workflows, with code examples shown in Python. When importing objects into Weaviate, you can choose to: import, export, or query. You can find the accompanying Jupyter notebook and data at this repository.",
                                    "url": "https://weaviate.io/developers/weaviate/tutorials/vector-provision-options"
                                },
                                {
                                    "name": "wikipedia",
                                    "summary": "This tutorial will show you how to import a large dataset (25k articles from Wikipedia) that already includes vectors. We will use this Simple English Wikipedia dataset hosted by OpenAI that includes vector embeddings. If you haven't yet, we recommend going through the Quickstart tutorial first to get the most out of this section.",
                                    "url": "https://weaviate.io/developers/weaviate/tutorials/wikipedia"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "dpa",
            "summary": "This Data Processing Agreement (\"Agreement\") forms part of the Contract for Services (\"Principal Agreement\") between: Google and Facebook. Last Updated: May 2024. The Agreement is intended to be valid until the end of the contract in 2024. It is not intended to extend beyond this date.",
            "url": "https://weaviate.io/dpa"
        },
        {
            "name": "gen-feedback-loops",
            "summary": "Generative Feedback Loops take results generated from language models, vectorize them, and save them back into the database. This interaction between the models and dataset enables smarter automation of tasks like data cleaning and content creation. Use data produced by generative models to enhance user experiences and automate manual tasks.",
            "url": "https://weaviate.io/gen-feedback-loops"
        },
        {
            "name": "hybrid-search",
            "summary": " Hybrid search in Weaviate combines keyword (BM25) and vector search to leverage both exact term matching and semantic context. By merging results within the same system, developers can build intuitive search applications faster. Blend vector, keyword, and multimodal techniques to deliver accurate, contextual search with less complexity.",
            "url": "https://weaviate.io/hybrid-search"
        },
        {
            "name": "knowledgecards",
            "summary": "Unlock the power of vector search with our guides. Our guides will help you conquer vector embeddings and build better AI applications. We'll also share some tips on how to use the technology in your own business. For more information on our guides, visit our guides page.",
            "url": "https://weaviate.io/learn/knowledgecards"
        },
        {
            "name": "papers",
            "summary": "pass",
            "url": "parent_url",
            "children": [
                {
                    "name": "page",
                    "summary": "pass",
                    "url": "parent_url",
                    "children": [
                        {
                            "name": "2",
                            "summary": "Provides a taxonomy of different types of hallucinations. Finetuning a 7B model to outperform GPT-4 for hallucination detection. Using persuasion ot jailbreak LLM's. Using a secret language to learn and use a secretlanguage. A new type of hallucination taxonomy.",
                            "url": "https://weaviate.io/papers/page/2"
                        },
                        {
                            "name": "3",
                            "summary": "A new way to chunk your data using LLM's. Compares finetuning vs RAG for improvement on a specific domain. Getting an LLM to check its own responses for hallucination. Getting LLMs to forget by finetuned. Using prompt engineering to solve the 'lost in the middle' problem.",
                            "url": "https://weaviate.io/papers/page/3"
                        },
                        {
                            "name": "4",
                            "summary": "Why do large language models attend better over the beginning and end of thier context? Comparing LLM performance using retreival vs longer context lengths. Differentiating between human-written language and AI-generated text. Can we use synthetic data to train future generations of LLM's?",
                            "url": "https://weaviate.io/papers/page/4"
                        }
                    ]
                },
                {
                    "name": "paper-1",
                    "summary": "NVIDIA published a new paper examining how well very large finetuned LLMs with longer context lengths compare to shorter context length RAG supported LLMs. The main finding was that \"retrieval can significantly improve the performance of LLMs regardless of their extended context window sizes\"",
                    "url": "https://weaviate.io/papers/paper-1"
                },
                {
                    "name": "paper-2",
                    "summary": "Nelson Liu and Percy Liang's group at Stanford recently published a paper that discovered this \"lost in the middle\" effect.Greg Kamradt also ran great experiments and posted about how this very same pattern of underperformance exists in the new GPT-4 128K models from OpenAI.",
                    "url": "https://weaviate.io/papers/paper-2"
                },
                {
                    "name": "paper-3",
                    "summary": "Every model, out of 17 tested, provided a near-random performance on the task and was unable to perform pure causal reasoning. Researchers at the Max Planck Institute showed that this is a very big shortcoming of all of the LLMs they tested as of June 2023.",
                    "url": "https://weaviate.io/papers/paper-3"
                },
                {
                    "name": "paper-4",
                    "summary": "Synthetic data is quite promising, but to see how far we can push the limit with it, this paper investigates what happens when text produced by a version of GPT forms most of the training dataset. What happens to GPT versions GPT-{n} as generation n increases? In short, it was found that \"model-collapse\" occurs.",
                    "url": "https://weaviate.io/papers/paper-4"
                },
                {
                    "name": "paper10",
                    "summary": "A new paper from Tencent and Carnegie Mellon asked:. What text chunk size should we use in our RAG workflows? How does chunk size impact retrieval recall? Are bigger chunks better? Smaller chunks but keep more top-k? They found that instead of using 100-word passage or sentence-level chunking it's best create Propositions - concise, distinct and self-contained expressions of factoids.",
                    "url": "https://weaviate.io/papers/paper10"
                },
                {
                    "name": "paper11",
                    "summary": "Researchers from Microsoft asked if unsupervised next token prediction finetuning is better than RAG to improve LLM perf. on both seen and unseen QnA tasks. RAG is a better way to inject knowledge into LLMs than unsuper supervised fine-tuning(USFT)",
                    "url": "https://weaviate.io/papers/paper11"
                },
                {
                    "name": "paper13",
                    "summary": "Tested this with the new DALL-E-3 and it works! If you take words and pass them back in as prompts, the model can draw for you what the word means to it. For example: \"cagama gur gerano\" = \"a fantasy creature\"",
                    "url": "https://weaviate.io/papers/paper13"
                },
                {
                    "name": "paper14",
                    "summary": "Work from Microsoft uses synthetic data + LLMs as embedding models to achieve SOTA on the MTEB benchmark. They generate a multilingual synthetic retrieval dataset using GPT-4 which includes {queries, positive matches, hard negatives}. They use this synthetic dataset along with 13 other public datasets and embed the queries & negatives using the last layer vectors of Mistral-7B.",
                    "url": "https://weaviate.io/papers/paper14"
                },
                {
                    "name": "paper15",
                    "summary": "Persuasive Adversarial Prompting to Jailbreak LLMs with 92% Success Rate. More advanced models like GPT-4 are more vulnerable to persuasive adversarial prompts (PAPs) Test these PAPs to perform attacks covering 14 different risk categories (such as economic harm, etc.)",
                    "url": "https://weaviate.io/papers/paper15"
                },
                {
                    "name": "paper16",
                    "summary": "A breakdown of the Long Context Retrieval Embedding Models from Stanford. They release 3 long context(2k/8k/32k) BERT-like encoder embedding models on HuggingFace. The models are only 80M params and outperform larger models (4-85x larger)",
                    "url": "https://weaviate.io/papers/paper16"
                },
                {
                    "name": "paper18",
                    "summary": "Contradictory, Invented, Subjective, and Unverifiable are often sentence level and need to be removed completely to fix the issue.Entity and Relation are usually word level, and so can be fixed with small edits if you know where they occur. Check out the Quickstart tutorial, and begin building amazing apps wit us.",
                    "url": "https://weaviate.io/papers/paper18"
                },
                {
                    "name": "paper19",
                    "summary": "The model can identify different types of hallucination and mark which words they come from. It also suggests edits to improve factuality. The model has a fine-grained hallucination detection accuracy 46.5% while it's binary acc.{hallucination, no hallucination} is 79%.",
                    "url": "https://weaviate.io/papers/paper19"
                },
                {
                    "name": "paper20",
                    "summary": "The model is trained to predict the next token for trillions of tokens. The base model can be finetuned for dialogue - turning the base model into a chatbot. Human labelers are asked to pick good vs. bad responses and this data is used to train a model.",
                    "url": "https://weaviate.io/papers/paper20"
                },
                {
                    "name": "paper21",
                    "summary": "OpenAI recently announced embeddings that you can simply use chunks of (say the first 8, 16, 32, 64, 128 or 256 ... dimensions of the total 2048d vector) They use Matryoshka representation learning(MRL) to do this.",
                    "url": "https://weaviate.io/papers/paper21"
                },
                {
                    "name": "paper22",
                    "summary": "Modular RAG is comprised of various functional modules. Different RAG patterns are composed of different modules. The modular RAG paradigm is slowly becoming the norm in the RAG domain due to its versatility and flexibility, allowing: \u00a0flexibility, versatility, and versatility.",
                    "url": "https://weaviate.io/papers/paper22"
                },
                {
                    "name": "paper24",
                    "summary": "Binoculars is a technique that requires no training and can 0-shot detect 90% of LLM-generated content at a 0.01% false positive rate. Human tokens are, on average more surprising to LLMs than other LLM tokens. They use this insight to identify a classification threshold.",
                    "url": "https://weaviate.io/papers/paper24"
                },
                {
                    "name": "paper5",
                    "summary": "Researchers at the University of Maryland created a way for us to modify LLMs such that a watermark would automatically be applied to any content that LLM generates. The watermark they created can be identified in as little as 25 tokens and has negligible impact on text quality.",
                    "url": "https://weaviate.io/papers/paper5"
                },
                {
                    "name": "paper6",
                    "summary": "Multimodal RAG allows you to pack retrieved context into a prompt so that a language model can read relevant information before generating a response. This function is critical and allows us to integrate knowledge in a more scalable and modular way into LLMs. Vector databases provide an ideal store from which multimedia knowledge can be retrieved and can capture the meaning of all of these modalities.",
                    "url": "https://weaviate.io/papers/paper6"
                },
                {
                    "name": "paper7",
                    "summary": "Researchers at MicrosoftAI propose \"unlearning\" or \"un-training\" as a three-step process. First they finetune a model to always respond with some reference to the information they want to later erase. This \"reinforced model\" becomes a specialist in the information we eventually want to unlearn. This step is used to identify which tokens should be targeted in the unlearning step.",
                    "url": "https://weaviate.io/papers/paper7"
                },
                {
                    "name": "paper8",
                    "summary": "Anthropic was able to solve the \"lost in the middle\" problem \"by adding the sentence \u201cHere is the most relevant sentence in the context:\u201d to the start of Claude\u2019s response\" This was enough to raise Claude 2.1's score from 27% to 98% on the original evaluation.",
                    "url": "https://weaviate.io/papers/paper8"
                },
                {
                    "name": "paper9",
                    "summary": "Researchers from Cambridge released a paper developing a method called SelfCheckGPT. It uses only black-box access to a LLM through an API to assess if it's hallucinating. They report higher AUC-PR scores in sentence-level hallucination detection and higher correlation scores in passage-level factuality.",
                    "url": "https://weaviate.io/papers/paper9"
                },
                {
                    "name": "radit",
                    "summary": "When you prompt an LLM, RAG supplies relevant documents. A separate retrieval model computes the probability of each text chunk being relevant. Fine-tuning the LLM and retrieval model together can improve performance without requiring extensive data processing.Authors from Meta fine-tuned Llama 2 (65B parameters) and DRAGON+ a retriever, to create RA-DIT 65B.",
                    "url": "https://weaviate.io/papers/radit"
                },
                {
                    "name": "vit",
                    "summary": "VIT works by using GPT-4 to generate instructions for corresponding images and captions. This dataset is used to train LLaVA to learn to follow instructions and understand images. A vision encoder (CLIP ViT 40) is combined with an LLM to process text and images and generate text.",
                    "url": "https://weaviate.io/papers/vit"
                }
            ]
        },
        {
            "name": "partners",
            "summary": "pass",
            "url": "parent_url",
            "children": [
                {
                    "name": "aws",
                    "summary": "Weaviate is an open source vector database that's purpose-built for AI. Tight integrations with AWS infrastructure and services like SageMaker and Bedrock help developers build and deploy production-ready generative AI applications with less hassle. Weaviate can meet you where you are on your journey to the cloud. Enterprises can migrate data to AWS and power real-time analytics and apps on a unifieddata platform.",
                    "url": "https://weaviate.io/partners/aws"
                },
                {
                    "name": "gcp",
                    "summary": "Weaviate is an open source vector database that's purpose-built for AI. Weaviate cloud service is natively built on Google Cloud and scales using Google Kubernetes Engine. Integrations with Google AI Workbench and Vertex AI, including the latest Foundation Models like Gemini Pro and Ultra LLMs.",
                    "url": "https://weaviate.io/partners/gcp"
                },
                {
                    "name": "snowflake",
                    "summary": "Weaviate is an open source vector database that's used to power modern AI use cases like semantic and multimodal search and retrieval augmented generation. Integration with Snowflake\u2019s platform helps enterprises leverage the power of GenAI while ensuring data privacy.Develop Python apps faster by integrating Weaviate and Streamlit. Create interactive interfaces using your data and ML models.",
                    "url": "https://weaviate.io/partners/snowflake"
                }
            ]
        },
        {
            "name": "platform",
            "summary": "Help developers build and scale AI-powered applications more easily with an open source, developer-friendly platform and ecosystem. Weaviate is available as a self-hosted database, a managed service, or a Kubernetes package in your VPC. Use proprietary data to securely interact with ML models. Back up as often as needed with zero downtime.",
            "url": "https://weaviate.io/platform"
        },
        {
            "name": "podcast",
            "summary": "Join Connor Shorten as he interviews Weaviate community users, leading machine learning experts, and explores Weaviates use cases from users and customers. We are beyond honored to feature Dai Vu from Google on this one, alongside Weaviated Co-Founder Bob van Luijt! We are super excited to share our 94th WeAviate podcast with Magdalen Dobson Manohar.",
            "url": "https://weaviate.io/podcast"
        },
        {
            "name": "pricing",
            "summary": "Sign up now and start building with your 14-day free trial. Pricing is based on dimensions stored and chosen SLA tier. The exact calculation can be found in the FAQ (not inclusive of discounts and taxes).All Packages include:Price per 1M vector dimensions stored per month.Phone Escalation response time: Severity 1.",
            "url": "https://weaviate.io/pricing"
        },
        {
            "name": "privacy",
            "summary": "This is the privacy policy of Weaviate B.V. (\u201cWeaviate\u201d, \u2018we\u2019, and \u201cour\u201d). Weaviates is a private limited company, established at the Prinsengracht 769A in Amsterdam, the Netherlands. Weaviated is responsible for the collection and use of your personal data.",
            "url": "https://weaviate.io/privacy"
        },
        {
            "name": "rag",
            "summary": "Retrieval Augmented Generation (RAG) incorporates external knowledge into a Large Language Model (LLM) to improve the accuracy of AI-generated content. Weaviate's design caters specifically to the demands of vector data, enabling unparalleled scalability and performance. This scalability is key in RAG applications, where the volume of data and the need for rapid retrieval is significant.",
            "url": "https://weaviate.io/rag"
        },
        {
            "name": "security",
            "summary": "Weaviate Cloud was built to help developers scale AI applications with ease and confidence. Weaviate is built on an extensible framework with flexible deployment options that can adapt to the needs of your business as they evolve. We\u2019re committed to offering the capabilities our enterprise customers need to meet security and compliance requirements.",
            "url": "https://weaviate.io/security"
        },
        {
            "name": "service",
            "summary": "pass",
            "url": "parent_url",
            "children": [
                {
                    "name": "code-of-conduct",
                    "summary": "We welcome and support people of all backgrounds and identities. We will all experience frustration from time to time, but we cannot allow that frustration to become personal attacks. An environment where people feel uncomfortable or threatened is not a productive or creative one. Be kind to others. Do not insult or put down others.",
                    "url": "https://weaviate.io/service/code-of-conduct"
                },
                {
                    "name": "code-of-ethics-and-professional-conduct",
                    "summary": "We welcome and support people of all backgrounds and identities. This includes but is not limited to, members of any sexual orientation, gender identity and expression, race, ethnicity, culture, national origin, social and economic class. An environment where people feel uncomfortable or threatened is not a productive or creative one.",
                    "url": "https://weaviate.io/service/code-of-ethics-and-professional-conduct"
                },
                {
                    "name": "contributor-license-agreement",
                    "summary": "You accept and agree to the following terms and conditions for Your present and future Contributions submitted to Weaviate. You reserve all right, title, and interest in and to Your Contributions. The license is for your protection as a Contributor as well as the protection of Weaviates. It does not change your rights to use your own Contributions for any other purpose.",
                    "url": "https://weaviate.io/service/contributor-license-agreement"
                },
                {
                    "name": "weaviate-enterprise-agreement-nonus",
                    "summary": "The Weaviate Offering may include individual open-source software components, each of which has its own copyright and its own applicable license conditions. \u201cClaim\u201d means any claim, demand, suit, or proceeding. \u2018Affiliates\u2019 means an entity that directly or indirectly Controls, is Controlled by, or is under common Control with another entity.",
                    "url": "https://weaviate.io/service/weaviate-enterprise-agreement-nonus"
                },
                {
                    "name": "weaviate-enterprise-agreement-us",
                    "summary": "Weaviate will make the Weaviate Offering available to Customer pursuant to this Agreement, any applicable Exhibits, and the applicable Order Form. Customer shall pay those amounts due and not disputed in good faith within thirty (30) days of the date of receipt of the applicable invoice.",
                    "url": "https://weaviate.io/service/weaviate-enterprise-agreement-us"
                },
                {
                    "name": "weaviate-general-terms-of-service",
                    "summary": "Weaviate Offering is an open-sourced vector Offering that permits customers to store data objects and vector embeddings. To be eligible to register for a Weaviate account, you must review and accept the terms of this Weaviates Terms of Service (this \u201cAgreement\u201d or these \u201cTerms\u201d)",
                    "url": "https://weaviate.io/service/weaviate-general-terms-of-service"
                }
            ]
        },
        {
            "name": "services",
            "summary": "pass",
            "url": "parent_url",
            "children": [
                {
                    "name": "byoc",
                    "summary": "Weaviate hosts and manages our database within your existing cloud environment, leveraging your cloud's native services. Our solution integrates seamlessly with AWS, GCP, and Azure, ensuring optimized performance and security. Our BYOC architecture capitalizes on managed Kubernetes, ensuring scalability and resilience.",
                    "url": "https://weaviate.io/services/byoc"
                },
                {
                    "name": "education-and-support",
                    "summary": "Keep your AI-native development skills fresh with self-paced courses offered through Weaviate Academy and DeepLearning.AI. With onboarding packages tailored to your needs, we\u2019ll make sure you\u2019re set up for success. We offer 24x7 enterprise support options for both Weaviates Cloud Services and open source users.",
                    "url": "https://weaviate.io/services/education-and-support"
                },
                {
                    "name": "enterprise-cloud",
                    "summary": "Weaviate\u2019s Enterprise Cloud solution provides the power of Weaviate on dedicated resources, ensuring consistent, high-speed results without the complexities of self-management. Your data and operations are isolated within a dedicated tenant, boosting security, consistency, and performance. All the features of the AI-native vector database, with enhanced data isolation.",
                    "url": "https://weaviate.io/services/enterprise-cloud"
                },
                {
                    "name": "serverless",
                    "summary": "Weaviate is an AI-native vector database, as a fully-managed SaaS offering. Best for nimble teams at all stages of building. Pricing is based on dimensions stored and chosen SLA tier. The exact calculation can be found in the FAQ (not inclusive of discounts and taxes).",
                    "url": "https://weaviate.io/services/serverless"
                }
            ]
        },
        {
            "name": "sla",
            "summary": "Service Level Agreement delineates the service levels for Weaviate's vector database services. The infrastructure of the services is designed for Normal Use. Any usage beyond Normal Use may lead to a degradation of service quality and availability. Issues accessing the service due to application errors (like misuse, misconfiguration, etc.) are excluded from Availability calculations.",
            "url": "https://weaviate.io/sla"
        },
        {
            "name": "subprocessors",
            "summary": "The Data Controller acknowledges and agrees that the list of subprocessors may be updated from time to time by the Data Processor in accordance with the terms of the Principal Agreement. Last Updated: May, 2024. The following subprocessers are authorized to process Personal Data: Google Cloud Platform (GCP) Google Workspace (formerly G Suite) HubSpot.",
            "url": "https://weaviate.io/subprocessors"
        },
        {
            "name": "weaviate-support-terms",
            "summary": "Weaviate provides a ticketing system operated by the Weaviate technical team. Support tickets can be opened 24x7. Customer will work with Weaviates support personnel during the investigation of Support Tickets as reasonably needed and in a timely manner. Customer shall not provide access to any personally identifiable information for purposes of the Agreement.",
            "url": "https://weaviate.io/weaviate-support-terms"
        }
    ]
}
